{"version":3,"sources":["C:\\Users\\User\\OneDrive\\Desktop\\6senseHQ-HireX-client\\store\\store.ts"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport authReducer from '../redux/slices/authSlice';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\n//Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"],"names":["persistor","store","rootReducer","combineReducers","auth","authReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistStore"],"mappings":";;;;;;;;;;;IA+BgBA,SAAS;eAATA;;IAAPC,KAAK;eAALA;;;yBA/BuC;kEACxB;8BACqB;gEACzB;;;;;;AAEpB,MAAMC,cAAcC,IAAAA,wBAAe,EAAC;IAClCC,MAAMC,kBAAW;AACnB;AAEA,MAAMC,gBAAgB;IACpBC,KAAK;IACLC,SAAAA,gBAAO;IACPC,WAAW;QAAC;KAAO;AACrB;AAEA,MAAMC,mBAAmBC,IAAAA,4BAAc,EAACL,eAAeJ;AAEvD,MAAMD,QAAQW,IAAAA,uBAAc,EAAC;IAC3BC,SAASH;IACTI,YAAY,CAACC,uBACXA,qBAAqB;YACnBC,mBAAmB;QACrB;AACJ;AAMA,MAAMhB,YAAYiB,IAAAA,0BAAY,EAAChB"}