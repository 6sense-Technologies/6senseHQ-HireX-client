90754a6b1753fa7fadc7d9791ef86365
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacthookform = require("react-hook-form");
const _reactselect = /*#__PURE__*/ _interop_require_default(require("react-select"));
const _react1 = require("@phosphor-icons/react");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const Dropdown = ({ placeholder, options, name, errors, control, setValue, ClassName })=>{
    const customStyles = {
        control: (provided, state)=>({
                ...provided,
                borderColor: errors[name] ? 'red' : provided.borderColor,
                '&:hover': {
                    borderColor: errors[name] ? 'red' : provided.borderColor
                }
            }),
        indicatorSeparator: ()=>({
                display: 'none'
            })
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
        control: control,
        name: name,
        render: ({ field, fieldState })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: `relative flex items-center gap-7`,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "relative w-full",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactselect.default, {
                            ...field,
                            instanceId: name,
                            value: Array.isArray(field.value) ? field.value.map((val)=>options?.find((option)=>option.value === val)) : options?.find((option)=>option.value === field.value) || null,
                            onChange: (selectedOption)=>{
                                const selectedValue = Array.isArray(selectedOption) ? selectedOption.map((option)=>option.value) : selectedOption ? selectedOption.value : '';
                                field.onChange(selectedValue);
                                setValue(name, [
                                    selectedValue
                                ], {
                                    shouldValidate: true
                                });
                            },
                            options: options,
                            placeholder: placeholder,
                            className: `w-full ${ClassName}`,
                            styles: customStyles
                        }),
                        fieldState.invalid && errors && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                            className: "absolute mt-2 flex justify-start text-xs text-red-500",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Warning, {
                                    className: "mr-1 mt-[1px]"
                                }),
                                errors[name]?.message
                            ]
                        })
                    ]
                })
            })
    });
};
const _default = Dropdown;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVXNlclxcT25lRHJpdmVcXERlc2t0b3BcXDZzZW5zZUhRLUhpcmVYLWNsaWVudFxcY29tcG9uZW50c1xcZHJvcGRvd24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENvbnRyb2xsZXIsIFVzZUZvcm1TZXRWYWx1ZSB9IGZyb20gJ3JlYWN0LWhvb2stZm9ybSc7XG5pbXBvcnQgU2VsZWN0IGZyb20gJ3JlYWN0LXNlbGVjdCc7XG5pbXBvcnQgeyBXYXJuaW5nIH0gZnJvbSAnQHBob3NwaG9yLWljb25zL3JlYWN0JztcblxudHlwZSBPcHRpb25UeXBlID0ge1xuICB2YWx1ZTogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xufTtcblxuaW50ZXJmYWNlIERyb3Bkb3duUHJvcHMge1xuICBwbGFjZWhvbGRlcj86IHN0cmluZztcbiAgb3B0aW9ucz86IE9wdGlvblR5cGVbXTtcbiAgZXJyb3JzPzogYW55O1xuICBuYW1lOiBzdHJpbmc7XG4gIGNvbnRyb2w6IGFueTtcbiAgc2V0VmFsdWU6IFVzZUZvcm1TZXRWYWx1ZTxhbnk+O1xuICB2YWx1ZT86IHN0cmluZztcbiAgQ2xhc3NOYW1lPzogc3RyaW5nO1xufVxuXG5jb25zdCBEcm9wZG93bjogUmVhY3QuRkM8RHJvcGRvd25Qcm9wcz4gPSAoe1xuICBwbGFjZWhvbGRlcixcbiAgb3B0aW9ucyxcbiAgbmFtZSxcbiAgZXJyb3JzLFxuICBjb250cm9sLFxuICBzZXRWYWx1ZSxcbiAgQ2xhc3NOYW1lLFxufSkgPT4ge1xuICBjb25zdCBjdXN0b21TdHlsZXMgPSB7XG4gICAgY29udHJvbDogKHByb3ZpZGVkOiBhbnksIHN0YXRlOiBhbnkpID0+ICh7XG4gICAgICAuLi5wcm92aWRlZCxcbiAgICAgIGJvcmRlckNvbG9yOiBlcnJvcnNbbmFtZV0gPyAncmVkJyA6IHByb3ZpZGVkLmJvcmRlckNvbG9yLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGJvcmRlckNvbG9yOiBlcnJvcnNbbmFtZV0gPyAncmVkJyA6IHByb3ZpZGVkLmJvcmRlckNvbG9yLFxuICAgICAgfSxcbiAgICB9KSxcbiAgICBpbmRpY2F0b3JTZXBhcmF0b3I6ICgpID0+ICh7XG4gICAgICBkaXNwbGF5OiAnbm9uZScsXG4gICAgfSksXG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udHJvbGxlclxuICAgICAgY29udHJvbD17Y29udHJvbH1cbiAgICAgIG5hbWU9e25hbWV9XG4gICAgICByZW5kZXI9eyh7IGZpZWxkLCBmaWVsZFN0YXRlIH0pID0+IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2ByZWxhdGl2ZSBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtN2B9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyZWxhdGl2ZSB3LWZ1bGwnPlxuICAgICAgICAgICAgPFNlbGVjdFxuICAgICAgICAgICAgICB7Li4uZmllbGR9XG4gICAgICAgICAgICAgIGluc3RhbmNlSWQ9e25hbWV9XG4gICAgICAgICAgICAgIHZhbHVlPXtcbiAgICAgICAgICAgICAgICBBcnJheS5pc0FycmF5KGZpZWxkLnZhbHVlKVxuICAgICAgICAgICAgICAgICAgPyBmaWVsZC52YWx1ZS5tYXAoKHZhbDogc3RyaW5nKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM/LmZpbmQoKG9wdGlvbikgPT4gb3B0aW9uLnZhbHVlID09PSB2YWwpXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIDogb3B0aW9ucz8uZmluZCgob3B0aW9uKSA9PiBvcHRpb24udmFsdWUgPT09IGZpZWxkLnZhbHVlKSB8fFxuICAgICAgICAgICAgICAgICAgICBudWxsXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9eyhzZWxlY3RlZE9wdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkVmFsdWUgPSBBcnJheS5pc0FycmF5KHNlbGVjdGVkT3B0aW9uKVxuICAgICAgICAgICAgICAgICAgPyBzZWxlY3RlZE9wdGlvbi5tYXAoKG9wdGlvbjogT3B0aW9uVHlwZSkgPT4gb3B0aW9uLnZhbHVlKVxuICAgICAgICAgICAgICAgICAgOiBzZWxlY3RlZE9wdGlvblxuICAgICAgICAgICAgICAgICAgICA/IHNlbGVjdGVkT3B0aW9uLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgIDogJyc7XG4gICAgICAgICAgICAgICAgZmllbGQub25DaGFuZ2Uoc2VsZWN0ZWRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgc2V0VmFsdWUobmFtZSwgW3NlbGVjdGVkVmFsdWVdLCB7IHNob3VsZFZhbGlkYXRlOiB0cnVlIH0pO1xuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICBvcHRpb25zPXtvcHRpb25zfVxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17YHctZnVsbCAke0NsYXNzTmFtZX1gfVxuICAgICAgICAgICAgICBzdHlsZXM9e2N1c3RvbVN0eWxlc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7ZmllbGRTdGF0ZS5pbnZhbGlkICYmIGVycm9ycyAmJiAoXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nYWJzb2x1dGUgbXQtMiBmbGV4IGp1c3RpZnktc3RhcnQgdGV4dC14cyB0ZXh0LXJlZC01MDAnPlxuICAgICAgICAgICAgICAgIDxXYXJuaW5nIGNsYXNzTmFtZT0nbXItMSBtdC1bMXB4XScgLz5cbiAgICAgICAgICAgICAgICB7ZXJyb3JzW25hbWVdPy5tZXNzYWdlfVxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgLz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duO1xuIl0sIm5hbWVzIjpbIkRyb3Bkb3duIiwicGxhY2Vob2xkZXIiLCJvcHRpb25zIiwibmFtZSIsImVycm9ycyIsImNvbnRyb2wiLCJzZXRWYWx1ZSIsIkNsYXNzTmFtZSIsImN1c3RvbVN0eWxlcyIsInByb3ZpZGVkIiwic3RhdGUiLCJib3JkZXJDb2xvciIsImluZGljYXRvclNlcGFyYXRvciIsImRpc3BsYXkiLCJDb250cm9sbGVyIiwicmVuZGVyIiwiZmllbGQiLCJmaWVsZFN0YXRlIiwiZGl2IiwiY2xhc3NOYW1lIiwiU2VsZWN0IiwiaW5zdGFuY2VJZCIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwidmFsIiwiZmluZCIsIm9wdGlvbiIsIm9uQ2hhbmdlIiwic2VsZWN0ZWRPcHRpb24iLCJzZWxlY3RlZFZhbHVlIiwic2hvdWxkVmFsaWRhdGUiLCJzdHlsZXMiLCJpbnZhbGlkIiwic3BhbiIsIldhcm5pbmciLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7K0JBeUZBOzs7ZUFBQTs7OzsrREF4RnVCOytCQUNxQjtvRUFDekI7d0JBQ0s7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0J4QixNQUFNQSxXQUFvQyxDQUFDLEVBQ3pDQyxXQUFXLEVBQ1hDLE9BQU8sRUFDUEMsSUFBSSxFQUNKQyxNQUFNLEVBQ05DLE9BQU8sRUFDUEMsUUFBUSxFQUNSQyxTQUFTLEVBQ1Y7SUFDQyxNQUFNQyxlQUFlO1FBQ25CSCxTQUFTLENBQUNJLFVBQWVDLFFBQWdCLENBQUE7Z0JBQ3ZDLEdBQUdELFFBQVE7Z0JBQ1hFLGFBQWFQLE1BQU0sQ0FBQ0QsS0FBSyxHQUFHLFFBQVFNLFNBQVNFLFdBQVc7Z0JBQ3hELFdBQVc7b0JBQ1RBLGFBQWFQLE1BQU0sQ0FBQ0QsS0FBSyxHQUFHLFFBQVFNLFNBQVNFLFdBQVc7Z0JBQzFEO1lBQ0YsQ0FBQTtRQUNBQyxvQkFBb0IsSUFBTyxDQUFBO2dCQUN6QkMsU0FBUztZQUNYLENBQUE7SUFDRjtJQUVBLHFCQUNFLHFCQUFDQyx5QkFBVTtRQUNUVCxTQUFTQTtRQUNURixNQUFNQTtRQUNOWSxRQUFRLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxVQUFVLEVBQUUsaUJBQzVCLHFCQUFDQztnQkFBSUMsV0FBVyxDQUFDLGdDQUFnQyxDQUFDOzBCQUNoRCxjQUFBLHNCQUFDRDtvQkFBSUMsV0FBVTs7c0NBQ2IscUJBQUNDLG9CQUFNOzRCQUNKLEdBQUdKLEtBQUs7NEJBQ1RLLFlBQVlsQjs0QkFDWm1CLE9BQ0VDLE1BQU1DLE9BQU8sQ0FBQ1IsTUFBTU0sS0FBSyxJQUNyQk4sTUFBTU0sS0FBSyxDQUFDRyxHQUFHLENBQUMsQ0FBQ0MsTUFDZnhCLFNBQVN5QixLQUFLLENBQUNDLFNBQVdBLE9BQU9OLEtBQUssS0FBS0ksUUFFN0N4QixTQUFTeUIsS0FBSyxDQUFDQyxTQUFXQSxPQUFPTixLQUFLLEtBQUtOLE1BQU1NLEtBQUssS0FDdEQ7NEJBRU5PLFVBQVUsQ0FBQ0M7Z0NBQ1QsTUFBTUMsZ0JBQWdCUixNQUFNQyxPQUFPLENBQUNNLGtCQUNoQ0EsZUFBZUwsR0FBRyxDQUFDLENBQUNHLFNBQXVCQSxPQUFPTixLQUFLLElBQ3ZEUSxpQkFDRUEsZUFBZVIsS0FBSyxHQUNwQjtnQ0FDTk4sTUFBTWEsUUFBUSxDQUFDRTtnQ0FDZnpCLFNBQVNILE1BQU07b0NBQUM0QjtpQ0FBYyxFQUFFO29DQUFFQyxnQkFBZ0I7Z0NBQUs7NEJBQ3pEOzRCQUNBOUIsU0FBU0E7NEJBQ1RELGFBQWFBOzRCQUNia0IsV0FBVyxDQUFDLE9BQU8sRUFBRVosV0FBVzs0QkFDaEMwQixRQUFRekI7O3dCQUVUUyxXQUFXaUIsT0FBTyxJQUFJOUIsd0JBQ3JCLHNCQUFDK0I7NEJBQUtoQixXQUFVOzs4Q0FDZCxxQkFBQ2lCLGVBQU87b0NBQUNqQixXQUFVOztnQ0FDbEJmLE1BQU0sQ0FBQ0QsS0FBSyxFQUFFa0M7Ozs7Ozs7QUFRL0I7TUFFQSxXQUFlckMifQ==