{"version":3,"sources":["C:\\Users\\User\\OneDrive\\Desktop\\6senseHQ-HireX-client\\__test__\\signup.test.tsx"],"sourcesContent":["import '@testing-library/jest-dom';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { store } from '../store/store';\nimport Signup from '../app/(auth)/signup/page';\n\n\n// Mock NextAuth and providers\njest.mock('next-auth', () => ({\n  __esModule: true,\n  signIn: jest.fn(),\n  signOut: jest.fn(),\n  getSession: jest.fn(() => Promise.resolve(null)),\n  default: jest.fn(),\n}));\n\njest.mock('next-auth/providers/google', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    id: 'google',\n    name: 'Google',\n    type: 'oauth',\n    clientId: 'mock-client-id',\n    clientSecret: 'mock-client-secret',\n  })),\n}));\n\njest.mock('next-auth/providers/credentials', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    id: 'credentials',\n    name: 'Credentials',\n    credentials: {\n      email: { label: 'Email', type: 'text', placeholder: 'example@example.com' },\n      password: { label: 'Password', type: 'password' },\n    },\n    authorize: jest.fn(() => ({\n      email: 'test@example.com',\n      accessToken: 'mock-access-token',\n      refreshToken: 'mock-refresh-token',\n    })),\n  })),\n}));\n\njest.mock('axios', () => ({\n  post: jest.fn(() => Promise.resolve({ data: { tokens: { access_token: 'mock-access-token', refresh_token: 'mock-refresh-token' } } })),\n}));\n\n\nconst queryClient = new QueryClient();\n\ndescribe('Signup Page', () => {\n  beforeEach(() => {\n    render(\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Signup />\n        </QueryClientProvider>\n      </Provider>\n    );\n  });\n\n  it('renders the logo', () => {\n    const logo = screen.getByAltText('Pattern50 Logo');\n    expect(logo).toBeInTheDocument();\n  });\n\n  it('renders the title', () => {\n    const title = screen.getByRole('heading', { name: /signup/i });\n    expect(title).toBeInTheDocument();\n  });\n\n  it('renders the full name label', () => {\n    const fullNameLabel = screen.getByText('Full Name');\n    expect(fullNameLabel).toBeInTheDocument();\n  });\n\n  it('renders the email label', () => {\n    const emailLabel = screen.getByText('Email Address');\n    expect(emailLabel).toBeInTheDocument();\n  });\n\n  it('renders the password label', () => {\n    const passwordLabel = screen.getByText('Password');\n    expect(passwordLabel).toBeInTheDocument();\n  });\n\n  it('renders the full name placeholder', () => {\n    const fullNamePlaceholder = screen.getByPlaceholderText('Full Name');\n    expect(fullNamePlaceholder).toBeInTheDocument();\n  });\n\n  it('renders the email address placeholder', () => {\n    const emailPlaceholder = screen.getByPlaceholderText('Email Address');\n    expect(emailPlaceholder).toBeInTheDocument();\n  });\n\n  it('renders the password placeholder', () => {\n    const passwordPlaceholder = screen.getByPlaceholderText('Password');\n    expect(passwordPlaceholder).toBeInTheDocument();\n  });\n});\n"],"names":["jest","mock","__esModule","signIn","fn","signOut","getSession","Promise","resolve","default","id","name","type","clientId","clientSecret","credentials","email","label","placeholder","password","authorize","accessToken","refreshToken","post","data","tokens","access_token","refresh_token","queryClient","QueryClient","describe","beforeEach","render","Provider","store","QueryClientProvider","client","Signup","it","logo","screen","getByAltText","expect","toBeInTheDocument","title","getByRole","fullNameLabel","getByText","emailLabel","passwordLabel","fullNamePlaceholder","getByPlaceholderText","emailPlaceholder","passwordPlaceholder"],"mappings":";AAQA,8BAA8B;AAC9BA,KAAKC,IAAI,CAAC,aAAa,IAAO,CAAA;QAC5BC,YAAY;QACZC,QAAQH,KAAKI,EAAE;QACfC,SAASL,KAAKI,EAAE;QAChBE,YAAYN,KAAKI,EAAE,CAAC,IAAMG,QAAQC,OAAO,CAAC;QAC1CC,SAAST,KAAKI,EAAE;IAClB,CAAA;AAEAJ,KAAKC,IAAI,CAAC,8BAA8B,IAAO,CAAA;QAC7CC,YAAY;QACZO,SAAST,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACtBM,IAAI;gBACJC,MAAM;gBACNC,MAAM;gBACNC,UAAU;gBACVC,cAAc;YAChB,CAAA;IACF,CAAA;AAEAd,KAAKC,IAAI,CAAC,mCAAmC,IAAO,CAAA;QAClDC,YAAY;QACZO,SAAST,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACtBM,IAAI;gBACJC,MAAM;gBACNI,aAAa;oBACXC,OAAO;wBAAEC,OAAO;wBAASL,MAAM;wBAAQM,aAAa;oBAAsB;oBAC1EC,UAAU;wBAAEF,OAAO;wBAAYL,MAAM;oBAAW;gBAClD;gBACAQ,WAAWpB,KAAKI,EAAE,CAAC,IAAO,CAAA;wBACxBY,OAAO;wBACPK,aAAa;wBACbC,cAAc;oBAChB,CAAA;YACF,CAAA;IACF,CAAA;AAEAtB,KAAKC,IAAI,CAAC,SAAS,IAAO,CAAA;QACxBsB,MAAMvB,KAAKI,EAAE,CAAC,IAAMG,QAAQC,OAAO,CAAC;gBAAEgB,MAAM;oBAAEC,QAAQ;wBAAEC,cAAc;wBAAqBC,eAAe;oBAAqB;gBAAE;YAAE;IACrI,CAAA;;;;;QA/CO;uBACmC;4BACjB;4BACwB;uBAC3B;6DACH;;;;;;AA6CnB,MAAMC,cAAc,IAAIC,uBAAW;AAEnCC,SAAS,eAAe;IACtBC,WAAW;QACTC,IAAAA,aAAM,gBACJ,qBAACC,oBAAQ;YAACC,OAAOA,YAAK;sBACpB,cAAA,qBAACC,+BAAmB;gBAACC,QAAQR;0BAC3B,cAAA,qBAACS,aAAM;;;IAIf;IAEAC,GAAG,oBAAoB;QACrB,MAAMC,OAAOC,aAAM,CAACC,YAAY,CAAC;QACjCC,OAAOH,MAAMI,iBAAiB;IAChC;IAEAL,GAAG,qBAAqB;QACtB,MAAMM,QAAQJ,aAAM,CAACK,SAAS,CAAC,WAAW;YAAElC,MAAM;QAAU;QAC5D+B,OAAOE,OAAOD,iBAAiB;IACjC;IAEAL,GAAG,+BAA+B;QAChC,MAAMQ,gBAAgBN,aAAM,CAACO,SAAS,CAAC;QACvCL,OAAOI,eAAeH,iBAAiB;IACzC;IAEAL,GAAG,2BAA2B;QAC5B,MAAMU,aAAaR,aAAM,CAACO,SAAS,CAAC;QACpCL,OAAOM,YAAYL,iBAAiB;IACtC;IAEAL,GAAG,8BAA8B;QAC/B,MAAMW,gBAAgBT,aAAM,CAACO,SAAS,CAAC;QACvCL,OAAOO,eAAeN,iBAAiB;IACzC;IAEAL,GAAG,qCAAqC;QACtC,MAAMY,sBAAsBV,aAAM,CAACW,oBAAoB,CAAC;QACxDT,OAAOQ,qBAAqBP,iBAAiB;IAC/C;IAEAL,GAAG,yCAAyC;QAC1C,MAAMc,mBAAmBZ,aAAM,CAACW,oBAAoB,CAAC;QACrDT,OAAOU,kBAAkBT,iBAAiB;IAC5C;IAEAL,GAAG,oCAAoC;QACrC,MAAMe,sBAAsBb,aAAM,CAACW,oBAAoB,CAAC;QACxDT,OAAOW,qBAAqBV,iBAAiB;IAC/C;AACF"}