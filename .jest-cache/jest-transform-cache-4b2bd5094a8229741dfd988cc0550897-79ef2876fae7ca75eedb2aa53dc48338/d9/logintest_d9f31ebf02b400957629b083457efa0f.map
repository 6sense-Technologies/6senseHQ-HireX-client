{"version":3,"sources":["C:\\Users\\User\\OneDrive\\Desktop\\6senseHQ-HireX-client\\__test__\\login.test.tsx"],"sourcesContent":["import '@testing-library/jest-dom';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { store } from '../store/store';\nimport Login from '../app/(auth)/login/page';\nimport axios from 'axios';\n\n// Mock NextAuth and providers\njest.mock('next-auth', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    handlers: jest.fn(),\n    signIn: jest.fn(),\n    signOut: jest.fn(),\n  })),\n}));\n\njest.mock('next-auth/providers/google', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    id: 'google',\n    name: 'Google',\n    type: 'oauth',\n    clientId: 'mock-client-id',\n    clientSecret: 'mock-client-secret',\n  })),\n}));\n\njest.mock('next-auth/providers/credentials', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    id: 'credentials',\n    name: 'Credentials',\n    credentials: {\n      email: { label: 'Email', type: 'text', placeholder: 'example@example.com' },\n      password: { label: 'Password', type: 'password' },\n    },\n    authorize: jest.fn(() => ({\n      email: 'test@example.com',\n      accessToken: 'mock-access-token',\n      refreshToken: 'mock-refresh-token',\n    })),\n  })),\n}));\n\njest.mock('axios', () => ({\n  post: jest.fn(() => Promise.resolve({ data: { tokens: { access_token: 'mock-access-token', refresh_token: 'mock-refresh-token' } } })),\n}));\n\nconst queryClient = new QueryClient();\n\ndescribe('Login Page', () => {\n  beforeEach(() => {\n    render(\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Login />\n        </QueryClientProvider>\n      </Provider>\n    );\n  });\n\n  it('renders the logo', () => {\n    const logo = screen.getByAltText('HireX Logo');\n    expect(logo).toBeInTheDocument();\n  });\n\n  // it('renders the title', () => {\n  //   const title = screen.getByRole('heading', { name: /login/i });\n  //   expect(title).toBeInTheDocument();\n  // });\n\n  // it('calls signIn with Google provider on Google button click', async () => {\n  //   const googleButton = screen.getByText('Continue with Google');\n  //   fireEvent.click(googleButton);\n  //   const { signIn } = require('next-auth');\n  //   expect(signIn).toHaveBeenCalledWith('google');\n  // });\n\n  // it('calls signIn with credentials on login button click', async () => {\n  //   const loginButton = screen.getByRole('button', { name: /login/i });\n  //   fireEvent.click(loginButton);\n  //   const { signIn } = require('next-auth');\n  //   expect(signIn).toHaveBeenCalledWith('credentials', {\n  //     redirect: false,\n  //     email: '',\n  //     password: '',\n  //   });\n  // });\n\n  // it('handles axios mock call', async () => {\n  //   const axiosMock = require('axios');\n  //   await axiosMock.post('http://192.168.0.158:8000/auth/login', {\n  //     email: 'test@example.com',\n  //     password: 'password123',\n  //   });\n  //   expect(axiosMock.post).toHaveBeenCalledWith(\n  //     'http://192.168.0.158:8000/auth/login',\n  //     { email: 'test@example.com', password: 'password123' },\n  //     { headers: { 'Content-Type': 'application/json' } }\n  //   );\n  // });\n});\n"],"names":["jest","mock","__esModule","default","fn","handlers","signIn","signOut","id","name","type","clientId","clientSecret","credentials","email","label","placeholder","password","authorize","accessToken","refreshToken","post","Promise","resolve","data","tokens","access_token","refresh_token","queryClient","QueryClient","describe","beforeEach","render","Provider","store","QueryClientProvider","client","Login","it","logo","screen","getByAltText","expect","toBeInTheDocument"],"mappings":";AAQA,8BAA8B;AAC9BA,KAAKC,IAAI,CAAC,aAAa,IAAO,CAAA;QAC5BC,YAAY;QACZC,SAASH,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACtBC,UAAUL,KAAKI,EAAE;gBACjBE,QAAQN,KAAKI,EAAE;gBACfG,SAASP,KAAKI,EAAE;YAClB,CAAA;IACF,CAAA;AAEAJ,KAAKC,IAAI,CAAC,8BAA8B,IAAO,CAAA;QAC7CC,YAAY;QACZC,SAASH,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACtBI,IAAI;gBACJC,MAAM;gBACNC,MAAM;gBACNC,UAAU;gBACVC,cAAc;YAChB,CAAA;IACF,CAAA;AAEAZ,KAAKC,IAAI,CAAC,mCAAmC,IAAO,CAAA;QAClDC,YAAY;QACZC,SAASH,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACtBI,IAAI;gBACJC,MAAM;gBACNI,aAAa;oBACXC,OAAO;wBAAEC,OAAO;wBAASL,MAAM;wBAAQM,aAAa;oBAAsB;oBAC1EC,UAAU;wBAAEF,OAAO;wBAAYL,MAAM;oBAAW;gBAClD;gBACAQ,WAAWlB,KAAKI,EAAE,CAAC,IAAO,CAAA;wBACxBU,OAAO;wBACPK,aAAa;wBACbC,cAAc;oBAChB,CAAA;YACF,CAAA;IACF,CAAA;AAEApB,KAAKC,IAAI,CAAC,SAAS,IAAO,CAAA;QACxBoB,MAAMrB,KAAKI,EAAE,CAAC,IAAMkB,QAAQC,OAAO,CAAC;gBAAEC,MAAM;oBAAEC,QAAQ;wBAAEC,cAAc;wBAAqBC,eAAe;oBAAqB;gBAAE;YAAE;IACrI,CAAA;;;;;QAhDO;uBACmC;4BACjB;4BACwB;uBAC3B;6DACJ;;;;;;AA6ClB,MAAMC,cAAc,IAAIC,uBAAW;AAEnCC,SAAS,cAAc;IACrBC,WAAW;QACTC,IAAAA,aAAM,gBACJ,qBAACC,oBAAQ;YAACC,OAAOA,YAAK;sBACpB,cAAA,qBAACC,+BAAmB;gBAACC,QAAQR;0BAC3B,cAAA,qBAACS,aAAK;;;IAId;IAEAC,GAAG,oBAAoB;QACrB,MAAMC,OAAOC,aAAM,CAACC,YAAY,CAAC;QACjCC,OAAOH,MAAMI,iBAAiB;IAChC;AAEA,kCAAkC;AAClC,mEAAmE;AACnE,uCAAuC;AACvC,MAAM;AAEN,+EAA+E;AAC/E,mEAAmE;AACnE,mCAAmC;AACnC,6CAA6C;AAC7C,mDAAmD;AACnD,MAAM;AAEN,0EAA0E;AAC1E,wEAAwE;AACxE,kCAAkC;AAClC,6CAA6C;AAC7C,yDAAyD;AACzD,uBAAuB;AACvB,iBAAiB;AACjB,oBAAoB;AACpB,QAAQ;AACR,MAAM;AAEN,8CAA8C;AAC9C,wCAAwC;AACxC,mEAAmE;AACnE,iCAAiC;AACjC,+BAA+B;AAC/B,QAAQ;AACR,iDAAiD;AACjD,8CAA8C;AAC9C,8DAA8D;AAC9D,0DAA0D;AAC1D,OAAO;AACP,MAAM;AACR"}