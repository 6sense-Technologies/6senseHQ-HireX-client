{"version":3,"sources":["C:\\Users\\User\\OneDrive\\Desktop\\6senseHQ-HireX-client\\jest-setup.js"],"sourcesContent":["import '@testing-library/jest-dom';\n\n// Mock process.env\nprocess.env.AUTH_GOOGLE_ID = 'mock-google-id';\nprocess.env.AUTH_GOOGLE_SECRET = 'mock-google-secret';\n\n// Mock next/navigation\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      replace: jest.fn(),\n      prefetch: jest.fn(),\n      pathname: '/',\n    };\n  },\n  useSearchParams: () => new URLSearchParams(),\n  usePathname: () => '/',\n}));\n\n// Mock axios\njest.mock('axios', () => ({\n  post: jest.fn(() =>\n    Promise.resolve({\n      data: {\n        tokens: {\n          access_token: 'mock-access-token',\n        },\n      },\n    })\n  ),\n  get: jest.fn(() => Promise.resolve({ data: {} })),\n}));\n\n// Mock next-auth\nconst mockGoogleProvider = jest.fn(() => ({\n  id: 'google',\n  name: 'Google',\n  type: 'oauth',\n  authorization: {\n    params: {\n      prompt: 'select_account',\n    },\n  },\n}));\n\njest.mock('next-auth/providers/google', () => mockGoogleProvider);\n\n// Mock NextAuth\nconst mockNextAuth = {\n  auth: jest.fn(() =>\n    Promise.resolve({\n      user: null,\n      token: null,\n    })\n  ),\n  signIn: jest.fn(() => Promise.resolve({ ok: true, error: null })),\n  signOut: jest.fn(() => Promise.resolve({ ok: true })),\n  handlers: {\n    GET: jest.fn(),\n    POST: jest.fn(),\n  },\n};\n\njest.mock('next-auth', () => ({\n  ...mockNextAuth,\n  default: () => mockNextAuth,\n}));\n\njest.mock('next-auth/react', () => ({\n  useSession: jest.fn(() => ({\n    data: {\n      user: {\n        name: 'Test User',\n        email: 'test@example.com',\n      },\n      accessToken: 'mock-access-token',\n    },\n    status: 'authenticated',\n  })),\n  signIn: jest.fn(() => Promise.resolve({ ok: true })),\n  signOut: jest.fn(() => Promise.resolve({ ok: true })),\n  getProviders: jest.fn(() =>\n    Promise.resolve({\n      google: {\n        id: 'google',\n        name: 'Google',\n        type: 'oauth',\n      },\n    })\n  ),\n}));\n"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","pathname","useSearchParams","URLSearchParams","usePathname","post","Promise","resolve","data","tokens","access_token","get","mockGoogleProvider","mockNextAuth","default","useSession","user","name","email","accessToken","status","signIn","ok","signOut","getProviders","google","id","type","process","env","AUTH_GOOGLE_ID","AUTH_GOOGLE_SECRET","authorization","params","prompt","auth","token","error","handlers","GET","POST"],"mappings":";AAMA,uBAAuB;AACvBA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC;YACE,OAAO;gBACLC,MAAMH,KAAKI,EAAE;gBACbC,SAASL,KAAKI,EAAE;gBAChBE,UAAUN,KAAKI,EAAE;gBACjBG,UAAU;YACZ;QACF;QACAC,iBAAiB,IAAM,IAAIC;QAC3BC,aAAa,IAAM;IACrB,CAAA;AAEA,aAAa;AACbV,KAAKC,IAAI,CAAC,SAAS,IAAO,CAAA;QACxBU,MAAMX,KAAKI,EAAE,CAAC,IACZQ,QAAQC,OAAO,CAAC;gBACdC,MAAM;oBACJC,QAAQ;wBACNC,cAAc;oBAChB;gBACF;YACF;QAEFC,KAAKjB,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAAEC,MAAM,CAAC;YAAE;IAChD,CAAA;AAcAd,KAAKC,IAAI,CAAC,8BAA8B,IAAMiB;AAkB9ClB,KAAKC,IAAI,CAAC,aAAa,IAAO,CAAA;QAC5B,GAAGkB,YAAY;QACfC,SAAS,IAAMD;IACjB,CAAA;AAEAnB,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCoB,YAAYrB,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACzBU,MAAM;oBACJQ,MAAM;wBACJC,MAAM;wBACNC,OAAO;oBACT;oBACAC,aAAa;gBACf;gBACAC,QAAQ;YACV,CAAA;QACAC,QAAQ3B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAAEe,IAAI;YAAK;QACjDC,SAAS7B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAAEe,IAAI;YAAK;QAClDE,cAAc9B,KAAKI,EAAE,CAAC,IACpBQ,QAAQC,OAAO,CAAC;gBACdkB,QAAQ;oBACNC,IAAI;oBACJT,MAAM;oBACNU,MAAM;gBACR;YACF;IAEJ,CAAA;;;;QA3FO;AAEP,mBAAmB;AACnBC,QAAQC,GAAG,CAACC,cAAc,GAAG;AAC7BF,QAAQC,GAAG,CAACE,kBAAkB,GAAG;AA8BjC,iBAAiB;AACjB,MAAMnB,qBAAqBlB,KAAKI,EAAE,CAAC,IAAO,CAAA;QACxC4B,IAAI;QACJT,MAAM;QACNU,MAAM;QACNK,eAAe;YACbC,QAAQ;gBACNC,QAAQ;YACV;QACF;IACF,CAAA;AAIA,gBAAgB;AAChB,MAAMrB,eAAe;IACnBsB,MAAMzC,KAAKI,EAAE,CAAC,IACZQ,QAAQC,OAAO,CAAC;YACdS,MAAM;YACNoB,OAAO;QACT;IAEFf,QAAQ3B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;YAAEe,IAAI;YAAMe,OAAO;QAAK;IAC9Dd,SAAS7B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;YAAEe,IAAI;QAAK;IAClDgB,UAAU;QACRC,KAAK7C,KAAKI,EAAE;QACZ0C,MAAM9C,KAAKI,EAAE;IACf;AACF"}