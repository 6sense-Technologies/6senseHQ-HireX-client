{"version":3,"sources":["C:\\Users\\User\\OneDrive\\Desktop\\6senseHQ-HireX-client\\app\\(auth)\\login\\page.tsx"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { Eye, EyeSlash, Circle } from '@phosphor-icons/react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport Logo from '../../../public/logos/HireXLogo.png';\nimport { Button } from '@/components/ui/button';\nimport { useRouter } from 'next/navigation';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useState } from 'react';\nimport { LoginSchema } from '@/Zodschema/authSchema';\nimport { LoginFormInputs } from '@/types/Auth/types';\nimport { Input } from '@/components/ui/input';\nimport GoogleButton from './_components/googleButton';\nimport OrDivider from './_components/orDivider';\nimport ErrorCard from './_components/errorCard';\nimport { useMutation } from '@tanstack/react-query';\nimport { useDispatch } from 'react-redux';\nimport { setAuthData } from '@/redux/slices/authSlice';\nimport Loader from '@/components/loader';\nimport { signIn, useSession } from 'next-auth/react';\nimport { BaseUrl } from '@/config';\n\nconst Login = () => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [errorFlag, setErrorFlag] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm<LoginFormInputs>({\n    resolver: zodResolver(LoginSchema),\n  });\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const session = useSession();\n\n  const loginMutation = useMutation({\n    mutationFn: async (data: LoginFormInputs) => {\n      const result = await signIn('credentials', {\n        redirect: false, // Prevent automatic redirection\n        email: data.email,\n        password: data.password,\n      });\n      if (result?.error) {\n        throw new Error(result.error);\n      }\n      return result;\n    },\n    onSuccess: (data) => {\n      // Handle successful login\n      router.push('/dashboard');\n    },\n    onError: () => {\n      setErrorFlag(true);\n    },\n  });\n\n  console.log('Env Testing', BaseUrl);\n\n  const handleSubmission: SubmitHandler<LoginFormInputs> = (data) => {\n    loginMutation.mutate(data, {\n      onSuccess: (data) => console.log('login Mutation data', data),\n    });\n  };\n\n  if (session.status === 'unauthenticated') {\n    return (\n      <div className='mx-8 flex min-h-screen items-center justify-center bg-white'>\n        <div className='w-full max-w-[384px] py-10'>\n          <div className='mx-auto'>\n            <div className='logo-area mb-2 flex justify-center'>\n              <Image src={Logo} alt='HireX Logo' />\n            </div>\n            <form\n              onSubmit={handleSubmit(handleSubmission)}\n              className='max-w-[384px] border-t-[4px] border-primary bg-pageBg p-[32px]'\n            >\n              <div>\n                <h1 className='text-headingXS font-bold text-textPrimary'>\n                  Login\n                </h1>\n                <p className='text-[14px] text-subHeading'>\n                  Continue with HireX\n                </p>\n              </div>\n\n              <ErrorCard setErrorFlag={setErrorFlag} errorFlag={errorFlag} />\n\n              <div className='flex flex-col gap-2'>\n                <div className='mt-[32px]'>\n                  <label htmlFor='email' className='text-sm text-textSecondary'>\n                    Email Address\n                  </label>\n                  <div className='inner-input-div mt-[4px]'>\n                    <Input\n                      control={control}\n                      placeholder='Email Address'\n                      name='email'\n                      errors={errors}\n                    />\n                  </div>\n                </div>\n\n                <div className='mt-[16px]'>\n                  <label\n                    htmlFor='password'\n                    className='text-sm text-textSecondary'\n                  >\n                    Password\n                  </label>\n\n                  <div className='relative'>\n                    <div className='mt-[4px]'>\n                      <Input\n                        control={control}\n                        type={passwordVisible ? 'text' : 'password'}\n                        name='password'\n                        placeholder='Password'\n                        errors={errors}\n                      />\n                      <button\n                        type='button'\n                        onClick={handlePasswordVisibility}\n                        className='absolute right-5 top-2.5'\n                      >\n                        {passwordVisible ? (\n                          <Eye size={20} className='text-xl text-subHeading' />\n                        ) : (\n                          <EyeSlash\n                            size={20}\n                            weight='bold'\n                            className='text-xl text-subHeading'\n                          />\n                        )}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className='mb-[32px] mt-[16px] flex justify-end'>\n                  <Link\n                    href='/forgotpassword'\n                    className='text-forgotpassword px-2 text-sm text-textSecondary'\n                  >\n                    Forgot password?\n                  </Link>\n                </div>\n              </div>\n\n              <div>\n                <Button variant={'primary'} size={'medium'} className='text-sm'>\n                  {loginMutation.isPending ? (\n                    <Circle className='animate-spin text-sm' />\n                  ) : (\n                    'Login'\n                  )}\n                </Button>\n              </div>\n\n              <OrDivider />\n\n              <GoogleButton />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    router.push('/dashboard');\n    return <Loader />;\n  }\n};\n\nexport default Login;\n"],"names":["Login","passwordVisible","setPasswordVisible","useState","router","useRouter","dispatch","useDispatch","errorFlag","setErrorFlag","register","handleSubmit","setValue","control","formState","errors","useForm","resolver","zodResolver","LoginSchema","handlePasswordVisibility","session","useSession","loginMutation","useMutation","mutationFn","data","result","signIn","redirect","email","password","error","Error","onSuccess","push","onError","console","log","BaseUrl","handleSubmission","mutate","status","div","className","Image","src","Logo","alt","form","onSubmit","h1","p","ErrorCard","label","htmlFor","Input","placeholder","name","type","button","onClick","Eye","size","EyeSlash","weight","Link","href","Button","variant","isPending","Circle","OrDivider","GoogleButton","Loader"],"mappings":"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"}