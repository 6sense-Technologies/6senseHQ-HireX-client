{"version":3,"sources":["C:\\Users\\User\\OneDrive\\Desktop\\6senseHQ-HireX-client\\app\\(auth)\\signup\\page.tsx"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { Circle, Eye, EyeSlash, X } from '@phosphor-icons/react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport Logo from '../../../public/logos/HireXLogo.png';\nimport { Button } from '@/components/ui/button';\nimport { useRouter } from 'next/navigation';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useState } from 'react';\nimport { SignupSchema } from '@/Zodschema/authSchema';\nimport { SingupFormInputs } from '@/types/Auth/types';\nimport Dropdown from '@/components/dropdown';\nimport { Input } from '@/components/ui/input';\nimport { useMutation } from '@tanstack/react-query';\nimport { handleSignup } from '@/api/Auth/authApi';\n\nconst Signup = () => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [cPasswordVisible, setCPasswordVisible] = useState(false);\n\n  const router = useRouter();\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm<SingupFormInputs>({\n    resolver: zodResolver(SignupSchema),\n    defaultValues: {\n      roleNames: [],\n    },\n  });\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const handleConfirmPasswordVisibility = () => {\n    setCPasswordVisible(!cPasswordVisible);\n  };\n\n  const roleOptions = [\n    { value: 'interviewer', label: 'Interviewer' },\n    { value: 'hr', label: 'HR' },\n    { value: 'admin', label: 'Admin' },\n  ];\n\n  const signupMutation = useMutation({\n    mutationFn: handleSignup,\n    onSuccess: () => {\n      router.push('/login');\n    },\n  });\n\n  const handleSubmission: SubmitHandler<SingupFormInputs> = (data) => {\n    const { Cpassword, ...rest } = data;\n    rest.roleNames = Array.isArray(rest.roleNames)\n      ? rest.roleNames\n      : [rest.roleNames];\n\n    signupMutation.mutate(rest);\n  };\n\n  console.log(errors);\n\n  return (\n    <div className='mx-8 flex min-h-screen items-center justify-center bg-white'>\n      <div className='w-full max-w-[384px] py-10'>\n        <div className='mx-auto'>\n          <div className='logo-area mb-2 flex justify-center'>\n            <Image src={Logo} alt='HireX Logo' />\n          </div>\n          <form\n            onSubmit={handleSubmit(handleSubmission)}\n            className='max-w-[384px] border-t-[4px] border-primary bg-pageBg p-[32px]'\n          >\n            <div>\n              <h1 className='text-headingXS font-bold text-textPrimary'>\n                Signup\n              </h1>\n              <p className='text-[14px] text-subHeading'>Create an account</p>\n            </div>\n\n            {/* <ErrorCard /> */}\n\n            <div className='flex flex-col gap-2'>\n              <div className='mt-[32px]'>\n                <label\n                  htmlFor='fullname'\n                  className='text-sm text-textSecondary'\n                >\n                  Full Name\n                </label>\n                <div className='inner-input-div mt-[4px]'>\n                  <Input\n                    control={control}\n                    placeholder='Full Name'\n                    name='name'\n                    errors={errors}\n                  />\n                </div>\n              </div>\n              <div className='mt-[6px]'>\n                <label htmlFor='email' className='text-sm text-textSecondary'>\n                  Email Address\n                </label>\n                <div className='inner-input-div mt-[4px]'>\n                  <Input\n                    control={control}\n                    placeholder='Email Address'\n                    name='email'\n                    errors={errors}\n                  />\n                </div>\n              </div>\n\n              <div className='mt-[6px]'>\n                <label\n                  htmlFor='password'\n                  className='text-sm text-textSecondary'\n                >\n                  Password\n                </label>\n                <p className='my-1 text-twelve text-subHeading'>\n                  Password must be 8 characters with symbols, numbers, upper &\n                  lower case, no spaces.\n                </p>\n\n                <div className='relative'>\n                  <div className='mt-[4px]'>\n                    <Input\n                      control={control}\n                      type={passwordVisible ? 'text' : 'password'}\n                      name='password'\n                      placeholder='Password'\n                      errors={errors}\n                    />\n                    <button\n                      type='button'\n                      onClick={handlePasswordVisibility}\n                      className='absolute right-5 top-2.5'\n                    >\n                      {passwordVisible ? (\n                        <Eye size={20} className='text-xl text-subHeading' />\n                      ) : (\n                        <EyeSlash\n                          size={20}\n                          weight='bold'\n                          className='text-xl text-subHeading'\n                        />\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-[6px]'>\n                <label\n                  htmlFor='Cpassword'\n                  className='text-sm text-textSecondary'\n                >\n                  Confirm Password\n                </label>\n\n                <div className='relative'>\n                  <div className='mt-[4px]'>\n                    <Input\n                      control={control}\n                      type={cPasswordVisible ? 'text' : 'password'}\n                      name='Cpassword'\n                      placeholder='Confirm Password'\n                      errors={errors}\n                    />\n                    <button\n                      type='button'\n                      onClick={handleConfirmPasswordVisibility}\n                      className='absolute right-5 top-2.5'\n                    >\n                      {cPasswordVisible ? (\n                        <Eye size={20} className='text-xl text-subHeading' />\n                      ) : (\n                        <EyeSlash\n                          size={20}\n                          weight='bold'\n                          className='text-xl text-subHeading'\n                        />\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-[6px]'>\n                <label htmlFor='role' className='text-sm text-textSecondary'>\n                  Role\n                </label>\n\n                <Dropdown\n                  control={control}\n                  name='roleNames'\n                  errors={errors}\n                  setValue={setValue}\n                  options={roleOptions}\n                  placeholder='Select a role'\n                  ClassName='mt-[4px]'\n                />\n              </div>\n\n              <div className='mb-[32px] mt-[16px] flex justify-end'>\n                <Link\n                  href='/login'\n                  className='text-forgotpassword text-primar px-2 text-sm'\n                >\n                  have a account? Login\n                </Link>\n              </div>\n            </div>\n\n            <div>\n              <Button variant={'primary'} size={'medium'} className='text-sm'>\n                {signupMutation.isPending ? (\n                  <Circle className='animate-spin text-sm' />\n                ) : (\n                  'Sign Up'\n                )}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"names":["Signup","passwordVisible","setPasswordVisible","useState","cPasswordVisible","setCPasswordVisible","router","useRouter","register","handleSubmit","setValue","control","formState","errors","useForm","resolver","zodResolver","SignupSchema","defaultValues","roleNames","handlePasswordVisibility","handleConfirmPasswordVisibility","roleOptions","value","label","signupMutation","useMutation","mutationFn","handleSignup","onSuccess","push","handleSubmission","data","Cpassword","rest","Array","isArray","mutate","console","log","div","className","Image","src","Logo","alt","form","onSubmit","h1","p","htmlFor","Input","placeholder","name","type","button","onClick","Eye","size","EyeSlash","weight","Dropdown","options","ClassName","Link","href","Button","variant","isPending","Circle"],"mappings":"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"}