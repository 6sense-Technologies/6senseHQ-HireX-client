{"version":3,"sources":["C:\\Users\\User\\OneDrive\\Desktop\\6senseHQ-HireX-client\\__test__\\login.test.tsx"],"sourcesContent":["import '@testing-library/jest-dom';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { store } from '../store/store';\nimport Login from '../app/(auth)/login/page';\nimport axios from 'axios';\nimport { useSession } from 'next-auth/react';\n\n\njest.mock('../components/loader', () => {\n  return jest.fn(() => <div data-testid=\"mock-loader\">Mock Loader</div>);\n});\n\n\njest.mock('next-auth', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    handlers: jest.fn(),\n    signIn: jest.fn(),\n    signOut: jest.fn(),\n  })),\n}));\n\n// Mock NextAuth and providers\njest.mock('next-auth/react', () => ({\n  signIn: jest.fn(),\n  useSession: jest.fn(),\n}));\n\njest.mock('next-auth/providers/google', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    id: 'google',\n    name: 'Google',\n    type: 'oauth',\n    clientId: 'mock-client-id',\n    clientSecret: 'mock-client-secret',\n  })),\n}));\n\njest.mock('next-auth/providers/credentials', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    id: 'credentials',\n    name: 'Credentials',\n    credentials: {\n      email: { label: 'Email', type: 'text', placeholder: 'example@example.com' },\n      password: { label: 'Password', type: 'password' },\n    },\n    authorize: jest.fn(() => ({\n      email: 'test@example.com',\n      accessToken: 'mock-access-token',\n      refreshToken: 'mock-refresh-token',\n    })),\n  })),\n}));\n\njest.mock('axios', () => ({\n  post: jest.fn(() => Promise.resolve({ data: { tokens: { access_token: 'mock-access-token', refresh_token: 'mock-refresh-token' } } })),\n}));\n\nconst queryClient = new QueryClient();\n\ndescribe('Login Page', () => {\n  beforeEach(() => {\n    (useSession as jest.Mock).mockReturnValue({ status: 'unauthenticated', data: null });\n\n    render(\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Login />\n        </QueryClientProvider>\n      </Provider>\n    );\n  });\n\n  it('renders the mock loader when unauthenticated', async () => {\n    const loader = await screen.findByTestId('mock-loader');\n    expect(loader).toBeInTheDocument();\n  });\n\n  it('renders the title if authenticated', async () => {\n    // Mock session to authenticated\n    (useSession as jest.Mock).mockReturnValueOnce({\n      status: 'authenticated',\n      data: { user: { name: 'Test User' } },\n    });\n\n    render(\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Login />\n        </QueryClientProvider>\n      </Provider>\n    );\n\n    const title = await screen.findByRole('heading', { name: /login/i });\n    expect(title).toBeInTheDocument();\n  });\n});\n"],"names":["jest","mock","fn","div","data-testid","__esModule","default","handlers","signIn","signOut","useSession","id","name","type","clientId","clientSecret","credentials","email","label","placeholder","password","authorize","accessToken","refreshToken","post","Promise","resolve","data","tokens","access_token","refresh_token","queryClient","QueryClient","describe","beforeEach","mockReturnValue","status","render","Provider","store","QueryClientProvider","client","Login","it","loader","screen","findByTestId","expect","toBeInTheDocument","mockReturnValueOnce","user","title","findByRole"],"mappings":";AAUAA,KAAKC,IAAI,CAAC,wBAAwB;IAChC,OAAOD,KAAKE,EAAE,CAAC,kBAAM,qBAACC;YAAIC,eAAY;sBAAc;;AACtD;AAGAJ,KAAKC,IAAI,CAAC,aAAa,IAAO,CAAA;QAC5BI,YAAY;QACZC,SAASN,KAAKE,EAAE,CAAC,IAAO,CAAA;gBACtBK,UAAUP,KAAKE,EAAE;gBACjBM,QAAQR,KAAKE,EAAE;gBACfO,SAAST,KAAKE,EAAE;YAClB,CAAA;IACF,CAAA;AAEA,8BAA8B;AAC9BF,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCO,QAAQR,KAAKE,EAAE;QACfQ,YAAYV,KAAKE,EAAE;IACrB,CAAA;AAEAF,KAAKC,IAAI,CAAC,8BAA8B,IAAO,CAAA;QAC7CI,YAAY;QACZC,SAASN,KAAKE,EAAE,CAAC,IAAO,CAAA;gBACtBS,IAAI;gBACJC,MAAM;gBACNC,MAAM;gBACNC,UAAU;gBACVC,cAAc;YAChB,CAAA;IACF,CAAA;AAEAf,KAAKC,IAAI,CAAC,mCAAmC,IAAO,CAAA;QAClDI,YAAY;QACZC,SAASN,KAAKE,EAAE,CAAC,IAAO,CAAA;gBACtBS,IAAI;gBACJC,MAAM;gBACNI,aAAa;oBACXC,OAAO;wBAAEC,OAAO;wBAASL,MAAM;wBAAQM,aAAa;oBAAsB;oBAC1EC,UAAU;wBAAEF,OAAO;wBAAYL,MAAM;oBAAW;gBAClD;gBACAQ,WAAWrB,KAAKE,EAAE,CAAC,IAAO,CAAA;wBACxBe,OAAO;wBACPK,aAAa;wBACbC,cAAc;oBAChB,CAAA;YACF,CAAA;IACF,CAAA;AAEAvB,KAAKC,IAAI,CAAC,SAAS,IAAO,CAAA;QACxBuB,MAAMxB,KAAKE,EAAE,CAAC,IAAMuB,QAAQC,OAAO,CAAC;gBAAEC,MAAM;oBAAEC,QAAQ;wBAAEC,cAAc;wBAAqBC,eAAe;oBAAqB;gBAAE;YAAE;IACrI,CAAA;;;;;QA5DO;uBACmC;4BACjB;4BACwB;uBAC3B;6DACJ;wBAES;;;;;;AAuD3B,MAAMC,cAAc,IAAIC,uBAAW;AAEnCC,SAAS,cAAc;IACrBC,WAAW;QACRxB,kBAAU,CAAeyB,eAAe,CAAC;YAAEC,QAAQ;YAAmBT,MAAM;QAAK;QAElFU,IAAAA,aAAM,gBACJ,qBAACC,oBAAQ;YAACC,OAAOA,YAAK;sBACpB,cAAA,qBAACC,+BAAmB;gBAACC,QAAQV;0BAC3B,cAAA,qBAACW,aAAK;;;IAId;IAEAC,GAAG,gDAAgD;QACjD,MAAMC,SAAS,MAAMC,aAAM,CAACC,YAAY,CAAC;QACzCC,OAAOH,QAAQI,iBAAiB;IAClC;IAEAL,GAAG,sCAAsC;QACvC,gCAAgC;QAC/BjC,kBAAU,CAAeuC,mBAAmB,CAAC;YAC5Cb,QAAQ;YACRT,MAAM;gBAAEuB,MAAM;oBAAEtC,MAAM;gBAAY;YAAE;QACtC;QAEAyB,IAAAA,aAAM,gBACJ,qBAACC,oBAAQ;YAACC,OAAOA,YAAK;sBACpB,cAAA,qBAACC,+BAAmB;gBAACC,QAAQV;0BAC3B,cAAA,qBAACW,aAAK;;;QAKZ,MAAMS,QAAQ,MAAMN,aAAM,CAACO,UAAU,CAAC,WAAW;YAAExC,MAAM;QAAS;QAClEmC,OAAOI,OAAOH,iBAAiB;IACjC;AACF"}