92172636380291df59b7f4fd8443f5ac
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
require("@testing-library/jest-dom");
const _react = require("@testing-library/react");
const _reactredux = require("react-redux");
const _reactquery = require("@tanstack/react-query");
const _store = require("../store/store");
const _page = /*#__PURE__*/ _interop_require_default(require("../app/(auth)/login/page"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const queryClient = new _reactquery.QueryClient();
describe('Login Page', ()=>{
    beforeEach(()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
            store: _store.store,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
                client: queryClient,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_page.default, {})
            })
        }));
    });
    it('renders the logo', ()=>{
        const logo = _react.screen.getByAltText('Pattern50 Logo');
        expect(logo).toBeInTheDocument();
    });
    it('renders the title', ()=>{
        const title = _react.screen.getByText('Login');
        expect(title).toBeInTheDocument();
    });
    it('renders the subtitle', ()=>{
        const subtitle = _react.screen.getByText('Continue with pattern50');
        expect(subtitle).toBeInTheDocument();
    });
    it('renders the email label', ()=>{
        const emailLabel = _react.screen.getByLabelText('Email Address');
        expect(emailLabel).toBeInTheDocument();
    });
    it('renders the email placeholder', ()=>{
        const emailPlaceholder = _react.screen.getByPlaceholderText('Email Address');
        expect(emailPlaceholder).toBeInTheDocument();
    });
    it('renders the password placeholder', ()=>{
        const passwordPlaceholder = _react.screen.getByPlaceholderText('Password');
        expect(passwordPlaceholder).toBeInTheDocument();
    });
    it('renders the login button', ()=>{
        const loginButton = _react.screen.getByRole('button', {
            name: /login/i
        });
        expect(loginButton).toBeInTheDocument();
    });
    it('renders the Google button', ()=>{
        const googleButton = _react.screen.getByText('Continue with Google');
        expect(googleButton).toBeInTheDocument();
    });
    it('renders the forgot password link', ()=>{
        const forgotPasswordLink = _react.screen.getByText('Forgot password?');
        expect(forgotPasswordLink).toBeInTheDocument();
    });
    it('renders the text below the login button', ()=>{
        const orDivider = _react.screen.getByText((content, element)=>{
            return element.tagName.toLowerCase() === 'span' && content === 'or';
        });
        expect(orDivider).toBeInTheDocument();
    });
    it('renders the Google button on the left of the Google sign-in button', ()=>{
        const googleButton = _react.screen.getByText('Continue with Google');
        expect(googleButton).toBeInTheDocument();
    });
    it('checks what happens when user hovers on the sign-in button', ()=>{
        const loginButton = _react.screen.getByRole('button', {
            name: /login/i
        });
        _react.fireEvent.mouseOver(loginButton);
        expect(loginButton).toHaveClass('hover:bg-blue-700');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2hhbmFcXE9uZURyaXZlXFxDb21wdXRlciBGaWxlc1xcRGVza3RvcFxcNnNlbnNlSFEtSGlyZVgtY2xpZW50XFxfX3Rlc3RfX1xcbG9naW4udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tJztcclxuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4sIGZpcmVFdmVudCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHsgUXVlcnlDbGllbnQsIFF1ZXJ5Q2xpZW50UHJvdmlkZXIgfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnknO1xyXG5pbXBvcnQgeyBzdG9yZSB9IGZyb20gJy4uL3N0b3JlL3N0b3JlJztcclxuaW1wb3J0IExvZ2luIGZyb20gJy4uL2FwcC8oYXV0aCkvbG9naW4vcGFnZSc7XHJcblxyXG5jb25zdCBxdWVyeUNsaWVudCA9IG5ldyBRdWVyeUNsaWVudCgpO1xyXG5cclxuZGVzY3JpYmUoJ0xvZ2luIFBhZ2UnLCAoKSA9PiB7XHJcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICByZW5kZXIoXHJcbiAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICAgIDxRdWVyeUNsaWVudFByb3ZpZGVyIGNsaWVudD17cXVlcnlDbGllbnR9PlxyXG4gICAgICAgICAgPExvZ2luIC8+XHJcbiAgICAgICAgPC9RdWVyeUNsaWVudFByb3ZpZGVyPlxyXG4gICAgICA8L1Byb3ZpZGVyPlxyXG4gICAgKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIGxvZ28nLCAoKSA9PiB7XHJcbiAgICBjb25zdCBsb2dvID0gc2NyZWVuLmdldEJ5QWx0VGV4dCgnUGF0dGVybjUwIExvZ28nKTtcclxuICAgIGV4cGVjdChsb2dvKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgncmVuZGVycyB0aGUgdGl0bGUnLCAoKSA9PiB7XHJcbiAgICBjb25zdCB0aXRsZSA9IHNjcmVlbi5nZXRCeVRleHQoJ0xvZ2luJyk7XHJcbiAgICBleHBlY3QodGl0bGUpLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdyZW5kZXJzIHRoZSBzdWJ0aXRsZScsICgpID0+IHtcclxuICAgIGNvbnN0IHN1YnRpdGxlID0gc2NyZWVuLmdldEJ5VGV4dCgnQ29udGludWUgd2l0aCBwYXR0ZXJuNTAnKTtcclxuICAgIGV4cGVjdChzdWJ0aXRsZSkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIGVtYWlsIGxhYmVsJywgKCkgPT4ge1xyXG4gICAgY29uc3QgZW1haWxMYWJlbCA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgnRW1haWwgQWRkcmVzcycpO1xyXG4gICAgZXhwZWN0KGVtYWlsTGFiZWwpLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgfSk7XHJcblxyXG5cclxuICBpdCgncmVuZGVycyB0aGUgZW1haWwgcGxhY2Vob2xkZXInLCAoKSA9PiB7XHJcbiAgICBjb25zdCBlbWFpbFBsYWNlaG9sZGVyID0gc2NyZWVuLmdldEJ5UGxhY2Vob2xkZXJUZXh0KCdFbWFpbCBBZGRyZXNzJyk7XHJcbiAgICBleHBlY3QoZW1haWxQbGFjZWhvbGRlcikudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIHBhc3N3b3JkIHBsYWNlaG9sZGVyJywgKCkgPT4ge1xyXG4gICAgY29uc3QgcGFzc3dvcmRQbGFjZWhvbGRlciA9IHNjcmVlbi5nZXRCeVBsYWNlaG9sZGVyVGV4dCgnUGFzc3dvcmQnKTtcclxuICAgIGV4cGVjdChwYXNzd29yZFBsYWNlaG9sZGVyKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIH0pO1xyXG5cclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIGxvZ2luIGJ1dHRvbicsICgpID0+IHtcclxuICAgIGNvbnN0IGxvZ2luQnV0dG9uID0gc2NyZWVuLmdldEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvbG9naW4vaSB9KTtcclxuICAgIGV4cGVjdChsb2dpbkJ1dHRvbikudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIEdvb2dsZSBidXR0b24nLCAoKSA9PiB7XHJcbiAgICBjb25zdCBnb29nbGVCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCdDb250aW51ZSB3aXRoIEdvb2dsZScpO1xyXG4gICAgZXhwZWN0KGdvb2dsZUJ1dHRvbikudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIGZvcmdvdCBwYXNzd29yZCBsaW5rJywgKCkgPT4ge1xyXG4gICAgY29uc3QgZm9yZ290UGFzc3dvcmRMaW5rID0gc2NyZWVuLmdldEJ5VGV4dCgnRm9yZ290IHBhc3N3b3JkPycpO1xyXG4gICAgZXhwZWN0KGZvcmdvdFBhc3N3b3JkTGluaykudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIHRleHQgYmVsb3cgdGhlIGxvZ2luIGJ1dHRvbicsICgpID0+IHtcclxuICAgIGNvbnN0IG9yRGl2aWRlciA9IHNjcmVlbi5nZXRCeVRleHQoKGNvbnRlbnQsIGVsZW1lbnQpID0+IHtcclxuICAgICAgcmV0dXJuIGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc3BhbicgJiYgY29udGVudCA9PT0gJ29yJztcclxuICAgIH0pO1xyXG4gICAgZXhwZWN0KG9yRGl2aWRlcikudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIEdvb2dsZSBidXR0b24gb24gdGhlIGxlZnQgb2YgdGhlIEdvb2dsZSBzaWduLWluIGJ1dHRvbicsICgpID0+IHtcclxuICAgIGNvbnN0IGdvb2dsZUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ0NvbnRpbnVlIHdpdGggR29vZ2xlJyk7XHJcbiAgICBleHBlY3QoZ29vZ2xlQnV0dG9uKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnY2hlY2tzIHdoYXQgaGFwcGVucyB3aGVuIHVzZXIgaG92ZXJzIG9uIHRoZSBzaWduLWluIGJ1dHRvbicsICgpID0+IHtcclxuICAgIGNvbnN0IGxvZ2luQnV0dG9uID0gc2NyZWVuLmdldEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvbG9naW4vaSB9KTtcclxuICAgIGZpcmVFdmVudC5tb3VzZU92ZXIobG9naW5CdXR0b24pO1xyXG4gICAgZXhwZWN0KGxvZ2luQnV0dG9uKS50b0hhdmVDbGFzcygnaG92ZXI6YmctYmx1ZS03MDAnKTtcclxuICB9KTtcclxufSk7Il0sIm5hbWVzIjpbInF1ZXJ5Q2xpZW50IiwiUXVlcnlDbGllbnQiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJyZW5kZXIiLCJQcm92aWRlciIsInN0b3JlIiwiUXVlcnlDbGllbnRQcm92aWRlciIsImNsaWVudCIsIkxvZ2luIiwiaXQiLCJsb2dvIiwic2NyZWVuIiwiZ2V0QnlBbHRUZXh0IiwiZXhwZWN0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJ0aXRsZSIsImdldEJ5VGV4dCIsInN1YnRpdGxlIiwiZW1haWxMYWJlbCIsImdldEJ5TGFiZWxUZXh0IiwiZW1haWxQbGFjZWhvbGRlciIsImdldEJ5UGxhY2Vob2xkZXJUZXh0IiwicGFzc3dvcmRQbGFjZWhvbGRlciIsImxvZ2luQnV0dG9uIiwiZ2V0QnlSb2xlIiwibmFtZSIsImdvb2dsZUJ1dHRvbiIsImZvcmdvdFBhc3N3b3JkTGluayIsIm9yRGl2aWRlciIsImNvbnRlbnQiLCJlbGVtZW50IiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwiZmlyZUV2ZW50IiwibW91c2VPdmVyIiwidG9IYXZlQ2xhc3MiXSwibWFwcGluZ3MiOiI7Ozs7O1FBQU87dUJBQ21DOzRCQUNqQjs0QkFDd0I7dUJBQzNCOzZEQUNKOzs7Ozs7QUFFbEIsTUFBTUEsY0FBYyxJQUFJQyx1QkFBVztBQUVuQ0MsU0FBUyxjQUFjO0lBQ3JCQyxXQUFXO1FBQ1RDLElBQUFBLGFBQU0sZ0JBQ0oscUJBQUNDLG9CQUFRO1lBQUNDLE9BQU9BLFlBQUs7c0JBQ3BCLGNBQUEscUJBQUNDLCtCQUFtQjtnQkFBQ0MsUUFBUVI7MEJBQzNCLGNBQUEscUJBQUNTLGFBQUs7OztJQUlkO0lBRUFDLEdBQUcsb0JBQW9CO1FBQ3JCLE1BQU1DLE9BQU9DLGFBQU0sQ0FBQ0MsWUFBWSxDQUFDO1FBQ2pDQyxPQUFPSCxNQUFNSSxpQkFBaUI7SUFDaEM7SUFFQUwsR0FBRyxxQkFBcUI7UUFDdEIsTUFBTU0sUUFBUUosYUFBTSxDQUFDSyxTQUFTLENBQUM7UUFDL0JILE9BQU9FLE9BQU9ELGlCQUFpQjtJQUNqQztJQUVBTCxHQUFHLHdCQUF3QjtRQUN6QixNQUFNUSxXQUFXTixhQUFNLENBQUNLLFNBQVMsQ0FBQztRQUNsQ0gsT0FBT0ksVUFBVUgsaUJBQWlCO0lBQ3BDO0lBRUFMLEdBQUcsMkJBQTJCO1FBQzVCLE1BQU1TLGFBQWFQLGFBQU0sQ0FBQ1EsY0FBYyxDQUFDO1FBQ3pDTixPQUFPSyxZQUFZSixpQkFBaUI7SUFDdEM7SUFHQUwsR0FBRyxpQ0FBaUM7UUFDbEMsTUFBTVcsbUJBQW1CVCxhQUFNLENBQUNVLG9CQUFvQixDQUFDO1FBQ3JEUixPQUFPTyxrQkFBa0JOLGlCQUFpQjtJQUM1QztJQUVBTCxHQUFHLG9DQUFvQztRQUNyQyxNQUFNYSxzQkFBc0JYLGFBQU0sQ0FBQ1Usb0JBQW9CLENBQUM7UUFDeERSLE9BQU9TLHFCQUFxQlIsaUJBQWlCO0lBQy9DO0lBR0FMLEdBQUcsNEJBQTRCO1FBQzdCLE1BQU1jLGNBQWNaLGFBQU0sQ0FBQ2EsU0FBUyxDQUFDLFVBQVU7WUFBRUMsTUFBTTtRQUFTO1FBQ2hFWixPQUFPVSxhQUFhVCxpQkFBaUI7SUFDdkM7SUFFQUwsR0FBRyw2QkFBNkI7UUFDOUIsTUFBTWlCLGVBQWVmLGFBQU0sQ0FBQ0ssU0FBUyxDQUFDO1FBQ3RDSCxPQUFPYSxjQUFjWixpQkFBaUI7SUFDeEM7SUFFQUwsR0FBRyxvQ0FBb0M7UUFDckMsTUFBTWtCLHFCQUFxQmhCLGFBQU0sQ0FBQ0ssU0FBUyxDQUFDO1FBQzVDSCxPQUFPYyxvQkFBb0JiLGlCQUFpQjtJQUM5QztJQUVBTCxHQUFHLDJDQUEyQztRQUM1QyxNQUFNbUIsWUFBWWpCLGFBQU0sQ0FBQ0ssU0FBUyxDQUFDLENBQUNhLFNBQVNDO1lBQzNDLE9BQU9BLFFBQVFDLE9BQU8sQ0FBQ0MsV0FBVyxPQUFPLFVBQVVILFlBQVk7UUFDakU7UUFDQWhCLE9BQU9lLFdBQVdkLGlCQUFpQjtJQUNyQztJQUVBTCxHQUFHLHNFQUFzRTtRQUN2RSxNQUFNaUIsZUFBZWYsYUFBTSxDQUFDSyxTQUFTLENBQUM7UUFDdENILE9BQU9hLGNBQWNaLGlCQUFpQjtJQUN4QztJQUVBTCxHQUFHLDhEQUE4RDtRQUMvRCxNQUFNYyxjQUFjWixhQUFNLENBQUNhLFNBQVMsQ0FBQyxVQUFVO1lBQUVDLE1BQU07UUFBUztRQUNoRVEsZ0JBQVMsQ0FBQ0MsU0FBUyxDQUFDWDtRQUNwQlYsT0FBT1UsYUFBYVksV0FBVyxDQUFDO0lBQ2xDO0FBQ0YifQ==