{"version":3,"sources":["C:\\Users\\khana\\OneDrive\\Computer Files\\Desktop\\6senseHQ-HireX-client\\jest-setup.js"],"sourcesContent":["import '@testing-library/jest-dom'\r\n\r\n// Mock process.env\r\nprocess.env.AUTH_GOOGLE_ID = 'mock-google-id'\r\nprocess.env.AUTH_GOOGLE_SECRET = 'mock-google-secret'\r\n\r\n// Mock next/navigation\r\njest.mock('next/navigation', () => ({\r\n  useRouter() {\r\n    return {\r\n      push: jest.fn(),\r\n      replace: jest.fn(),\r\n      prefetch: jest.fn(),\r\n      pathname: '/'\r\n    }\r\n  },\r\n  useSearchParams: () => new URLSearchParams(),\r\n  usePathname: () => '/'\r\n}))\r\n\r\n// Mock axios\r\njest.mock('axios', () => ({\r\n  post: jest.fn(() => Promise.resolve({ \r\n    data: { \r\n      tokens: { \r\n        access_token: 'mock-access-token' \r\n      } \r\n    } \r\n  })),\r\n  get: jest.fn(() => Promise.resolve({ data: {} }))\r\n}))\r\n\r\n// Mock next-auth\r\nconst mockGoogleProvider = jest.fn(() => ({\r\n  id: 'google',\r\n  name: 'Google',\r\n  type: 'oauth',\r\n  authorization: {\r\n    params: {\r\n      prompt: 'select_account'\r\n    }\r\n  }\r\n}))\r\n\r\njest.mock('next-auth/providers/google', () => mockGoogleProvider)\r\n\r\n// Mock NextAuth\r\nconst mockNextAuth = {\r\n  auth: jest.fn(() => Promise.resolve({\r\n    user: null,\r\n    token: null\r\n  })),\r\n  signIn: jest.fn(() => Promise.resolve({ ok: true, error: null })),\r\n  signOut: jest.fn(() => Promise.resolve({ ok: true })),\r\n  handlers: {\r\n    GET: jest.fn(),\r\n    POST: jest.fn()\r\n  }\r\n}\r\n\r\njest.mock('next-auth', () => ({\r\n  ...mockNextAuth,\r\n  default: () => mockNextAuth\r\n}))\r\n\r\njest.mock('next-auth/react', () => ({\r\n  useSession: jest.fn(() => ({\r\n    data: {\r\n      user: {\r\n        name: 'Test User',\r\n        email: 'test@example.com'\r\n      },\r\n      accessToken: 'mock-access-token'\r\n    },\r\n    status: 'authenticated'\r\n  })),\r\n  signIn: jest.fn(() => Promise.resolve({ ok: true })),\r\n  signOut: jest.fn(() => Promise.resolve({ ok: true })),\r\n  getProviders: jest.fn(() => Promise.resolve({\r\n    google: {\r\n      id: 'google',\r\n      name: 'Google',\r\n      type: 'oauth'\r\n    }\r\n  }))\r\n}))"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","pathname","useSearchParams","URLSearchParams","usePathname","post","Promise","resolve","data","tokens","access_token","get","mockGoogleProvider","mockNextAuth","default","useSession","user","name","email","accessToken","status","signIn","ok","signOut","getProviders","google","id","type","process","env","AUTH_GOOGLE_ID","AUTH_GOOGLE_SECRET","authorization","params","prompt","auth","token","error","handlers","GET","POST"],"mappings":";AAMA,uBAAuB;AACvBA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC;YACE,OAAO;gBACLC,MAAMH,KAAKI,EAAE;gBACbC,SAASL,KAAKI,EAAE;gBAChBE,UAAUN,KAAKI,EAAE;gBACjBG,UAAU;YACZ;QACF;QACAC,iBAAiB,IAAM,IAAIC;QAC3BC,aAAa,IAAM;IACrB,CAAA;AAEA,aAAa;AACbV,KAAKC,IAAI,CAAC,SAAS,IAAO,CAAA;QACxBU,MAAMX,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAClCC,MAAM;oBACJC,QAAQ;wBACNC,cAAc;oBAChB;gBACF;YACF;QACAC,KAAKjB,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAAEC,MAAM,CAAC;YAAE;IAChD,CAAA;AAcAd,KAAKC,IAAI,CAAC,8BAA8B,IAAMiB;AAgB9ClB,KAAKC,IAAI,CAAC,aAAa,IAAO,CAAA;QAC5B,GAAGkB,YAAY;QACfC,SAAS,IAAMD;IACjB,CAAA;AAEAnB,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCoB,YAAYrB,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACzBU,MAAM;oBACJQ,MAAM;wBACJC,MAAM;wBACNC,OAAO;oBACT;oBACAC,aAAa;gBACf;gBACAC,QAAQ;YACV,CAAA;QACAC,QAAQ3B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAAEe,IAAI;YAAK;QACjDC,SAAS7B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAAEe,IAAI;YAAK;QAClDE,cAAc9B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;gBAC1CkB,QAAQ;oBACNC,IAAI;oBACJT,MAAM;oBACNU,MAAM;gBACR;YACF;IACF,CAAA;;;;QArFO;AAEP,mBAAmB;AACnBC,QAAQC,GAAG,CAACC,cAAc,GAAG;AAC7BF,QAAQC,GAAG,CAACE,kBAAkB,GAAG;AA4BjC,iBAAiB;AACjB,MAAMnB,qBAAqBlB,KAAKI,EAAE,CAAC,IAAO,CAAA;QACxC4B,IAAI;QACJT,MAAM;QACNU,MAAM;QACNK,eAAe;YACbC,QAAQ;gBACNC,QAAQ;YACV;QACF;IACF,CAAA;AAIA,gBAAgB;AAChB,MAAMrB,eAAe;IACnBsB,MAAMzC,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;YAClCS,MAAM;YACNoB,OAAO;QACT;IACAf,QAAQ3B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;YAAEe,IAAI;YAAMe,OAAO;QAAK;IAC9Dd,SAAS7B,KAAKI,EAAE,CAAC,IAAMQ,QAAQC,OAAO,CAAC;YAAEe,IAAI;QAAK;IAClDgB,UAAU;QACRC,KAAK7C,KAAKI,EAAE;QACZ0C,MAAM9C,KAAKI,EAAE;IACf;AACF"}