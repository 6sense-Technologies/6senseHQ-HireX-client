{"version":3,"sources":["C:\\Users\\khana\\OneDrive\\Computer Files\\Desktop\\6senseHQ-HireX-client\\__test__\\createjob.test.tsx"],"sourcesContent":["import '@testing-library/jest-dom';\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport { Provider } from 'react-redux';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { store } from '../store/store';\r\nimport CreateJob from '../app/(dashboards)/create-job/page';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\ndescribe('CreateJob Page', () => {\r\n  beforeEach(() => {\r\n    render(\r\n      <Provider store={store}>\r\n        <QueryClientProvider client={queryClient}>\r\n          <CreateJob />\r\n        </QueryClientProvider>\r\n      </Provider>\r\n    );\r\n  });\r\n\r\n  it('renders the sections of the page', () => {\r\n    const sections = ['Job Information', 'Interview Stages', 'Job Responsibilities', 'Ideal Candidate', 'Status'];\r\n    sections.forEach(section => {\r\n      expect(screen.getByText(section)).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('renders the labels of the job information section', () => {\r\n    const labels = ['Job Position', 'Job Department (optional)', 'Number of Vacancies'];\r\n    labels.forEach(label => {\r\n      expect(screen.getByText(label)).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('renders the job position dropdown', () => {\r\n    const jobPositionDropdown = screen.getByPlaceholderText('Select Job Position');\r\n    expect(jobPositionDropdown).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the job department (optional) field dropdown', () => {\r\n    const jobDepartmentDropdown = screen.getByPlaceholderText('Select Job Department');\r\n    expect(jobDepartmentDropdown).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the number of vacancies field placeholder', () => {\r\n    const noOfVacancyPlaceholder = screen.getByPlaceholderText('Enter number of vacancies');\r\n    expect(noOfVacancyPlaceholder).toBeInTheDocument();\r\n  });\r\n\r\n\r\n\r\n  it('renders the interview stage section arrow buttons', () => {\r\n    const moveUpButton = screen.getByLabelText('Move stage up');\r\n    const moveDownButton = screen.getByLabelText('Move stage down');\r\n    expect(moveUpButton).toBeInTheDocument();\r\n    expect(moveDownButton).toBeInTheDocument();\r\n  });\r\n\r\n\r\n\r\n});"],"names":["queryClient","QueryClient","describe","beforeEach","render","Provider","store","QueryClientProvider","client","CreateJob","it","sections","forEach","section","expect","screen","getByText","toBeInTheDocument","labels","label","jobPositionDropdown","getByPlaceholderText","jobDepartmentDropdown","noOfVacancyPlaceholder","moveUpButton","getByLabelText","moveDownButton"],"mappings":";;;;;QAAO;uBACmC;4BACjB;4BACwB;uBAC3B;6DACA;;;;;;AAEtB,MAAMA,cAAc,IAAIC,uBAAW;AAEnCC,SAAS,kBAAkB;IACzBC,WAAW;QACTC,IAAAA,aAAM,gBACJ,qBAACC,oBAAQ;YAACC,OAAOA,YAAK;sBACpB,cAAA,qBAACC,+BAAmB;gBAACC,QAAQR;0BAC3B,cAAA,qBAACS,aAAS;;;IAIlB;IAEAC,GAAG,oCAAoC;QACrC,MAAMC,WAAW;YAAC;YAAmB;YAAoB;YAAwB;YAAmB;SAAS;QAC7GA,SAASC,OAAO,CAACC,CAAAA;YACfC,OAAOC,aAAM,CAACC,SAAS,CAACH,UAAUI,iBAAiB;QACrD;IACF;IAEAP,GAAG,qDAAqD;QACtD,MAAMQ,SAAS;YAAC;YAAgB;YAA6B;SAAsB;QACnFA,OAAON,OAAO,CAACO,CAAAA;YACbL,OAAOC,aAAM,CAACC,SAAS,CAACG,QAAQF,iBAAiB;QACnD;IACF;IAEAP,GAAG,qCAAqC;QACtC,MAAMU,sBAAsBL,aAAM,CAACM,oBAAoB,CAAC;QACxDP,OAAOM,qBAAqBH,iBAAiB;IAC/C;IAEAP,GAAG,wDAAwD;QACzD,MAAMY,wBAAwBP,aAAM,CAACM,oBAAoB,CAAC;QAC1DP,OAAOQ,uBAAuBL,iBAAiB;IACjD;IAEAP,GAAG,qDAAqD;QACtD,MAAMa,yBAAyBR,aAAM,CAACM,oBAAoB,CAAC;QAC3DP,OAAOS,wBAAwBN,iBAAiB;IAClD;IAIAP,GAAG,qDAAqD;QACtD,MAAMc,eAAeT,aAAM,CAACU,cAAc,CAAC;QAC3C,MAAMC,iBAAiBX,aAAM,CAACU,cAAc,CAAC;QAC7CX,OAAOU,cAAcP,iBAAiB;QACtCH,OAAOY,gBAAgBT,iBAAiB;IAC1C;AAIF"}