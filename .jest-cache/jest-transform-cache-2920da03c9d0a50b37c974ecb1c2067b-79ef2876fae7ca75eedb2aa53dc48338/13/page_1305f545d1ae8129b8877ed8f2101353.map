{"version":3,"sources":["C:\\Users\\khana\\OneDrive\\Computer Files\\Desktop\\6senseHQ-HireX-client\\app\\(auth)\\login\\page.tsx"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { Eye, EyeSlash, Circle } from '@phosphor-icons/react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport Logo from '../../../public/logos/Main-logo.svg';\nimport { Button } from '@/components/ui/button';\nimport { useRouter } from 'next/navigation';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useState } from 'react';\nimport { LoginSchema } from '@/schema/loginSchema';\nimport { LoginFormInputs } from '@/types/Auth/types';\nimport { Input } from '@/components/ui/input';\nimport GoogleButton from './_components/googleButton';\nimport OrDivider from './_components/orDivider';\nimport ErrorCard from './_components/errorCard';\nimport { useMutation } from '@tanstack/react-query';\nimport { handleLogin } from '@/api/Auth/authApi';\nimport { useDispatch } from 'react-redux';\nimport { setAuthData } from '@/redux/slices/authSlice';\n\nconst Login = () => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [errorFlag, setErrorFlag] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm<LoginFormInputs>({\n    resolver: zodResolver(LoginSchema),\n  });\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const loginMutation = useMutation({\n    mutationFn: handleLogin,\n    onSuccess: (data) => {\n      const { tokens, userInfo } = data;\n      dispatch(setAuthData({ tokens, userInfo }));\n      localStorage.setItem('accessToken', tokens.access_token);\n      localStorage.setItem('refreshToken', tokens.refresh_token);\n      router.push('/dashboard');\n    },\n    onError: () => {\n      setErrorFlag(true);\n    },\n  });\n\n  const handleSubmission: SubmitHandler<LoginFormInputs> = (data) => {\n    loginMutation.mutate(data);\n  };\n\n  console.log('errors of login page', errors);\n\n  return (\n    <div className='mx-8 flex min-h-screen items-center justify-center bg-white'>\n      <div className='w-full max-w-[384px] py-10'>\n        <div className='mx-auto'>\n          <div className='logo-area mb-2 flex justify-center'>\n            <Image src={Logo} alt='Pattern50 Logo' />\n          </div>\n          <form\n            onSubmit={handleSubmit(handleSubmission)}\n            className='max-w-[384px] border-t-[4px] border-primary bg-pageBg p-[32px]'\n          >\n            <div>\n              <h1 className='text-headingXS font-bold text-textPrimary'>\n                Login\n              </h1>\n              <p className='text-[14px] text-subHeading'>\n                Continue with pattern50\n              </p>\n            </div>\n\n            <ErrorCard setErrorFlag={setErrorFlag} errorFlag={errorFlag} />\n\n            <div className='flex flex-col gap-2'>\n              <div className='mt-[32px]'>\n                <label htmlFor='email' className='text-sm text-textSecondary'>\n                  Email Address\n                </label>\n                <div className='inner-input-div mt-[4px]'>\n                  <Input\n                    control={control}\n                    placeholder='Email Address'\n                    name='email'\n                    errors={errors}\n                  />\n                </div>\n              </div>\n\n              <div className='mt-[16px]'>\n                <label\n                  htmlFor='password'\n                  className='text-sm text-textSecondary'\n                >\n                  Password\n                </label>\n\n                <div className='relative'>\n                  <div className='mt-[4px]'>\n                    <Input\n                      control={control}\n                      type={passwordVisible ? 'text' : 'password'}\n                      name='password'\n                      placeholder='Password'\n                      errors={errors}\n                    />\n                    <button\n                      type='button'\n                      onClick={handlePasswordVisibility}\n                      className='absolute right-5 top-2.5'\n                    >\n                      {passwordVisible ? (\n                        <Eye size={20} className='text-xl text-subHeading' />\n                      ) : (\n                        <EyeSlash\n                          size={20}\n                          weight='bold'\n                          className='text-xl text-subHeading'\n                        />\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className='mb-[32px] mt-[16px] flex justify-end'>\n                <Link\n                  href='/forgotpassword'\n                  className='text-forgotpassword px-2 text-sm text-textSecondary'\n                >\n                  Forgot password?\n                </Link>\n              </div>\n            </div>\n\n            <div>\n              <Button variant={'primary'} size={'medium'} className='text-sm'>\n                {loginMutation.isPending ? (\n                  <Circle className='animate-spin text-sm' />\n                ) : (\n                  'Login'\n                )}\n              </Button>\n            </div>\n\n            <OrDivider />\n\n            <GoogleButton />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Login","passwordVisible","setPasswordVisible","useState","router","useRouter","dispatch","useDispatch","errorFlag","setErrorFlag","register","handleSubmit","setValue","control","formState","errors","useForm","resolver","zodResolver","LoginSchema","handlePasswordVisibility","loginMutation","useMutation","mutationFn","handleLogin","onSuccess","data","tokens","userInfo","setAuthData","localStorage","setItem","access_token","refresh_token","push","onError","handleSubmission","mutate","console","log","div","className","Image","src","Logo","alt","form","onSubmit","h1","p","ErrorCard","label","htmlFor","Input","placeholder","name","type","button","onClick","Eye","size","EyeSlash","weight","Link","href","Button","variant","isPending","Circle","OrDivider","GoogleButton"],"mappings":"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"}