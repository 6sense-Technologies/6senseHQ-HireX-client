e3b2c45107a61de2ad6caa70cde44c07
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
require("@testing-library/jest-dom");
const _react = require("@testing-library/react");
const _reactredux = require("react-redux");
const _reactquery = require("@tanstack/react-query");
const _store = require("../store/store");
const _page = /*#__PURE__*/ _interop_require_default(require("../app/(auth)/login/page"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const queryClient = new _reactquery.QueryClient();
describe('Login Page', ()=>{
    beforeEach(()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
            store: _store.store,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
                client: queryClient,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_page.default, {})
            })
        }));
    });
    it('renders the logo', ()=>{
        const logo = _react.screen.getByAltText('Pattern50 Logo');
        expect(logo).toBeInTheDocument();
    });
// it('renders the title', () => {
//   const title = screen.getByText('Login');
//   expect(title).toBeInTheDocument();
// });
// it('renders the subtitle', () => {
//   const subtitle = screen.getByText('Continue with pattern50');
//   expect(subtitle).toBeInTheDocument();
// });
// it('renders the email label', () => {
//   const emailLabel = screen.getByLabelText('Email Address');
//   expect(emailLabel).toBeInTheDocument();
// });
// it('renders the password label', () => {
//   const passwordLabel = screen.getByLabelText('Password');
//   expect(passwordLabel).toBeInTheDocument();
// });
// it('renders the email placeholder', () => {
//   const emailPlaceholder = screen.getByPlaceholderText('Email Address');
//   expect(emailPlaceholder).toBeInTheDocument();
// });
// it('renders the password placeholder', () => {
//   const passwordPlaceholder = screen.getByPlaceholderText('Password');
//   expect(passwordPlaceholder).toBeInTheDocument();
// });
// it('renders the eye icon in default', () => {
//   const eyeIcon = screen.getByRole('button', { name: /eye/i });
//   expect(eyeIcon).toBeInTheDocument();
// });
// it('toggles the eye icon visibility', () => {
//   const eyeButton = screen.getByRole('button', { name: /eye/i });
//   fireEvent.click(eyeButton);
//   expect(screen.getByRole('button', { name: /eye slash/i })).toBeInTheDocument();
//   fireEvent.click(screen.getByRole('button', { name: /eye slash/i }));
//   expect(screen.getByRole('button', { name: /eye/i })).toBeInTheDocument();
// });
// it('renders the login button', () => {
//   const loginButton = screen.getByRole('button', { name: /login/i });
//   expect(loginButton).toBeInTheDocument();
// });
// it('renders the Google button', () => {
//   const googleButton = screen.getByText('Sign in with Google');
//   expect(googleButton).toBeInTheDocument();
// });
// it('renders the forgot password link', () => {
//   const forgotPasswordLink = screen.getByText('Forgot password?');
//   expect(forgotPasswordLink).toBeInTheDocument();
// });
// it('renders the text below the login button', () => {
//   const orDivider = screen.getByText('OR');
//   expect(orDivider).toBeInTheDocument();
// });
// it('renders the Google button on the left of the Google sign-in button', () => {
//   const googleButton = screen.getByText('Sign in with Google');
//   expect(googleButton).toBeInTheDocument();
// });
// it('checks what happens when user hovers on the sign-in button', () => {
//   const loginButton = screen.getByRole('button', { name: /login/i });
//   fireEvent.mouseOver(loginButton);
//   expect(loginButton).toHaveClass('hover');
// });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2hhbmFcXE9uZURyaXZlXFxDb21wdXRlciBGaWxlc1xcRGVza3RvcFxcNnNlbnNlSFEtSGlyZVgtY2xpZW50XFxfX3Rlc3RfX1xcbG9naW4udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tJztcclxuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4sIGZpcmVFdmVudCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuXHJcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50LCBRdWVyeUNsaWVudFByb3ZpZGVyIH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcclxuaW1wb3J0IHsgc3RvcmUgfSBmcm9tICcuLi9zdG9yZS9zdG9yZSc7XHJcbmltcG9ydCBMb2dpbiBmcm9tICcuLi9hcHAvKGF1dGgpL2xvZ2luL3BhZ2UnO1xyXG5cclxuXHJcbmNvbnN0IHF1ZXJ5Q2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50KCk7XHJcblxyXG5kZXNjcmliZSgnTG9naW4gUGFnZScsICgpID0+IHtcclxuICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgIHJlbmRlcihcclxuICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgICAgPFF1ZXJ5Q2xpZW50UHJvdmlkZXIgY2xpZW50PXtxdWVyeUNsaWVudH0+XHJcbiAgICAgICAgICA8TG9naW4gLz5cclxuICAgICAgICA8L1F1ZXJ5Q2xpZW50UHJvdmlkZXI+XHJcbiAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICApO1xyXG4gIH0pO1xyXG5cclxuICBpdCgncmVuZGVycyB0aGUgbG9nbycsICgpID0+IHtcclxuICAgIGNvbnN0IGxvZ28gPSBzY3JlZW4uZ2V0QnlBbHRUZXh0KCdQYXR0ZXJuNTAgTG9nbycpO1xyXG4gICAgZXhwZWN0KGxvZ28pLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgfSk7XHJcblxyXG4gIC8vIGl0KCdyZW5kZXJzIHRoZSB0aXRsZScsICgpID0+IHtcclxuICAvLyAgIGNvbnN0IHRpdGxlID0gc2NyZWVuLmdldEJ5VGV4dCgnTG9naW4nKTtcclxuICAvLyAgIGV4cGVjdCh0aXRsZSkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAvLyB9KTtcclxuXHJcbiAgLy8gaXQoJ3JlbmRlcnMgdGhlIHN1YnRpdGxlJywgKCkgPT4ge1xyXG4gIC8vICAgY29uc3Qgc3VidGl0bGUgPSBzY3JlZW4uZ2V0QnlUZXh0KCdDb250aW51ZSB3aXRoIHBhdHRlcm41MCcpO1xyXG4gIC8vICAgZXhwZWN0KHN1YnRpdGxlKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIC8vIH0pO1xyXG5cclxuICAvLyBpdCgncmVuZGVycyB0aGUgZW1haWwgbGFiZWwnLCAoKSA9PiB7XHJcbiAgLy8gICBjb25zdCBlbWFpbExhYmVsID0gc2NyZWVuLmdldEJ5TGFiZWxUZXh0KCdFbWFpbCBBZGRyZXNzJyk7XHJcbiAgLy8gICBleHBlY3QoZW1haWxMYWJlbCkudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAvLyB9KTtcclxuXHJcbiAgLy8gaXQoJ3JlbmRlcnMgdGhlIHBhc3N3b3JkIGxhYmVsJywgKCkgPT4ge1xyXG4gIC8vICAgY29uc3QgcGFzc3dvcmRMYWJlbCA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgnUGFzc3dvcmQnKTtcclxuICAvLyAgIGV4cGVjdChwYXNzd29yZExhYmVsKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIC8vIH0pO1xyXG5cclxuICAvLyBpdCgncmVuZGVycyB0aGUgZW1haWwgcGxhY2Vob2xkZXInLCAoKSA9PiB7XHJcbiAgLy8gICBjb25zdCBlbWFpbFBsYWNlaG9sZGVyID0gc2NyZWVuLmdldEJ5UGxhY2Vob2xkZXJUZXh0KCdFbWFpbCBBZGRyZXNzJyk7XHJcbiAgLy8gICBleHBlY3QoZW1haWxQbGFjZWhvbGRlcikudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAvLyB9KTtcclxuXHJcbiAgLy8gaXQoJ3JlbmRlcnMgdGhlIHBhc3N3b3JkIHBsYWNlaG9sZGVyJywgKCkgPT4ge1xyXG4gIC8vICAgY29uc3QgcGFzc3dvcmRQbGFjZWhvbGRlciA9IHNjcmVlbi5nZXRCeVBsYWNlaG9sZGVyVGV4dCgnUGFzc3dvcmQnKTtcclxuICAvLyAgIGV4cGVjdChwYXNzd29yZFBsYWNlaG9sZGVyKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIC8vIH0pO1xyXG5cclxuICAvLyBpdCgncmVuZGVycyB0aGUgZXllIGljb24gaW4gZGVmYXVsdCcsICgpID0+IHtcclxuICAvLyAgIGNvbnN0IGV5ZUljb24gPSBzY3JlZW4uZ2V0QnlSb2xlKCdidXR0b24nLCB7IG5hbWU6IC9leWUvaSB9KTtcclxuICAvLyAgIGV4cGVjdChleWVJY29uKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIC8vIH0pO1xyXG5cclxuICAvLyBpdCgndG9nZ2xlcyB0aGUgZXllIGljb24gdmlzaWJpbGl0eScsICgpID0+IHtcclxuICAvLyAgIGNvbnN0IGV5ZUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogL2V5ZS9pIH0pO1xyXG4gIC8vICAgZmlyZUV2ZW50LmNsaWNrKGV5ZUJ1dHRvbik7XHJcbiAgLy8gICBleHBlY3Qoc2NyZWVuLmdldEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvZXllIHNsYXNoL2kgfSkpLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgLy8gICBmaXJlRXZlbnQuY2xpY2soc2NyZWVuLmdldEJ5Um9sZSgnYnV0dG9uJywgeyBuYW1lOiAvZXllIHNsYXNoL2kgfSkpO1xyXG4gIC8vICAgZXhwZWN0KHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogL2V5ZS9pIH0pKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIC8vIH0pO1xyXG5cclxuICAvLyBpdCgncmVuZGVycyB0aGUgbG9naW4gYnV0dG9uJywgKCkgPT4ge1xyXG4gIC8vICAgY29uc3QgbG9naW5CdXR0b24gPSBzY3JlZW4uZ2V0QnlSb2xlKCdidXR0b24nLCB7IG5hbWU6IC9sb2dpbi9pIH0pO1xyXG4gIC8vICAgZXhwZWN0KGxvZ2luQnV0dG9uKS50b0JlSW5UaGVEb2N1bWVudCgpO1xyXG4gIC8vIH0pO1xyXG5cclxuICAvLyBpdCgncmVuZGVycyB0aGUgR29vZ2xlIGJ1dHRvbicsICgpID0+IHtcclxuICAvLyAgIGNvbnN0IGdvb2dsZUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ1NpZ24gaW4gd2l0aCBHb29nbGUnKTtcclxuICAvLyAgIGV4cGVjdChnb29nbGVCdXR0b24pLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgLy8gfSk7XHJcblxyXG4gIC8vIGl0KCdyZW5kZXJzIHRoZSBmb3Jnb3QgcGFzc3dvcmQgbGluaycsICgpID0+IHtcclxuICAvLyAgIGNvbnN0IGZvcmdvdFBhc3N3b3JkTGluayA9IHNjcmVlbi5nZXRCeVRleHQoJ0ZvcmdvdCBwYXNzd29yZD8nKTtcclxuICAvLyAgIGV4cGVjdChmb3Jnb3RQYXNzd29yZExpbmspLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgLy8gfSk7XHJcblxyXG4gIC8vIGl0KCdyZW5kZXJzIHRoZSB0ZXh0IGJlbG93IHRoZSBsb2dpbiBidXR0b24nLCAoKSA9PiB7XHJcbiAgLy8gICBjb25zdCBvckRpdmlkZXIgPSBzY3JlZW4uZ2V0QnlUZXh0KCdPUicpO1xyXG4gIC8vICAgZXhwZWN0KG9yRGl2aWRlcikudG9CZUluVGhlRG9jdW1lbnQoKTtcclxuICAvLyB9KTtcclxuXHJcbiAgLy8gaXQoJ3JlbmRlcnMgdGhlIEdvb2dsZSBidXR0b24gb24gdGhlIGxlZnQgb2YgdGhlIEdvb2dsZSBzaWduLWluIGJ1dHRvbicsICgpID0+IHtcclxuICAvLyAgIGNvbnN0IGdvb2dsZUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ1NpZ24gaW4gd2l0aCBHb29nbGUnKTtcclxuICAvLyAgIGV4cGVjdChnb29nbGVCdXR0b24pLnRvQmVJblRoZURvY3VtZW50KCk7XHJcbiAgLy8gfSk7XHJcblxyXG4gIC8vIGl0KCdjaGVja3Mgd2hhdCBoYXBwZW5zIHdoZW4gdXNlciBob3ZlcnMgb24gdGhlIHNpZ24taW4gYnV0dG9uJywgKCkgPT4ge1xyXG4gIC8vICAgY29uc3QgbG9naW5CdXR0b24gPSBzY3JlZW4uZ2V0QnlSb2xlKCdidXR0b24nLCB7IG5hbWU6IC9sb2dpbi9pIH0pO1xyXG4gIC8vICAgZmlyZUV2ZW50Lm1vdXNlT3Zlcihsb2dpbkJ1dHRvbik7XHJcbiAgLy8gICBleHBlY3QobG9naW5CdXR0b24pLnRvSGF2ZUNsYXNzKCdob3ZlcicpO1xyXG4gIC8vIH0pO1xyXG59KTsiXSwibmFtZXMiOlsicXVlcnlDbGllbnQiLCJRdWVyeUNsaWVudCIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsInJlbmRlciIsIlByb3ZpZGVyIiwic3RvcmUiLCJRdWVyeUNsaWVudFByb3ZpZGVyIiwiY2xpZW50IiwiTG9naW4iLCJpdCIsImxvZ28iLCJzY3JlZW4iLCJnZXRCeUFsdFRleHQiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFBTzt1QkFDbUM7NEJBQ2pCOzRCQUV3Qjt1QkFDM0I7NkRBQ0o7Ozs7OztBQUdsQixNQUFNQSxjQUFjLElBQUlDLHVCQUFXO0FBRW5DQyxTQUFTLGNBQWM7SUFDckJDLFdBQVc7UUFDVEMsSUFBQUEsYUFBTSxnQkFDSixxQkFBQ0Msb0JBQVE7WUFBQ0MsT0FBT0EsWUFBSztzQkFDcEIsY0FBQSxxQkFBQ0MsK0JBQW1CO2dCQUFDQyxRQUFRUjswQkFDM0IsY0FBQSxxQkFBQ1MsYUFBSzs7O0lBSWQ7SUFFQUMsR0FBRyxvQkFBb0I7UUFDckIsTUFBTUMsT0FBT0MsYUFBTSxDQUFDQyxZQUFZLENBQUM7UUFDakNDLE9BQU9ILE1BQU1JLGlCQUFpQjtJQUNoQztBQUVBLGtDQUFrQztBQUNsQyw2Q0FBNkM7QUFDN0MsdUNBQXVDO0FBQ3ZDLE1BQU07QUFFTixxQ0FBcUM7QUFDckMsa0VBQWtFO0FBQ2xFLDBDQUEwQztBQUMxQyxNQUFNO0FBRU4sd0NBQXdDO0FBQ3hDLCtEQUErRDtBQUMvRCw0Q0FBNEM7QUFDNUMsTUFBTTtBQUVOLDJDQUEyQztBQUMzQyw2REFBNkQ7QUFDN0QsK0NBQStDO0FBQy9DLE1BQU07QUFFTiw4Q0FBOEM7QUFDOUMsMkVBQTJFO0FBQzNFLGtEQUFrRDtBQUNsRCxNQUFNO0FBRU4saURBQWlEO0FBQ2pELHlFQUF5RTtBQUN6RSxxREFBcUQ7QUFDckQsTUFBTTtBQUVOLGdEQUFnRDtBQUNoRCxrRUFBa0U7QUFDbEUseUNBQXlDO0FBQ3pDLE1BQU07QUFFTixnREFBZ0Q7QUFDaEQsb0VBQW9FO0FBQ3BFLGdDQUFnQztBQUNoQyxvRkFBb0Y7QUFDcEYseUVBQXlFO0FBQ3pFLDhFQUE4RTtBQUM5RSxNQUFNO0FBRU4seUNBQXlDO0FBQ3pDLHdFQUF3RTtBQUN4RSw2Q0FBNkM7QUFDN0MsTUFBTTtBQUVOLDBDQUEwQztBQUMxQyxrRUFBa0U7QUFDbEUsOENBQThDO0FBQzlDLE1BQU07QUFFTixpREFBaUQ7QUFDakQscUVBQXFFO0FBQ3JFLG9EQUFvRDtBQUNwRCxNQUFNO0FBRU4sd0RBQXdEO0FBQ3hELDhDQUE4QztBQUM5QywyQ0FBMkM7QUFDM0MsTUFBTTtBQUVOLG1GQUFtRjtBQUNuRixrRUFBa0U7QUFDbEUsOENBQThDO0FBQzlDLE1BQU07QUFFTiwyRUFBMkU7QUFDM0Usd0VBQXdFO0FBQ3hFLHNDQUFzQztBQUN0Qyw4Q0FBOEM7QUFDOUMsTUFBTTtBQUNSIn0=