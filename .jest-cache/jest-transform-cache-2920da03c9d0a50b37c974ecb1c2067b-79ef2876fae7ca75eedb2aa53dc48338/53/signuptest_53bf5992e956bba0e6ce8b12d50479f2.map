{"version":3,"sources":["C:\\Users\\khana\\OneDrive\\Computer Files\\Desktop\\6senseHQ-HireX-client\\__test__\\signup.test.tsx"],"sourcesContent":["import '@testing-library/jest-dom';\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport { Provider } from 'react-redux';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { store } from '../store/store';\r\nimport Signup from '../app/(auth)/signup/page';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\ndescribe('Signup Page', () => {\r\n  beforeEach(() => {\r\n    render(\r\n      <Provider store={store}>\r\n        <QueryClientProvider client={queryClient}>\r\n          <Signup />\r\n        </QueryClientProvider>\r\n      </Provider>\r\n    );\r\n  });\r\n\r\n  it('renders the logo', () => {\r\n    const logo = screen.getByAltText('Pattern50 Logo');\r\n    expect(logo).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the title', () => {\r\n    const title = screen.getByRole('heading', { name: /signup/i });\r\n    expect(title).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the subtitle', () => {\r\n    const subtitle = screen.getByText('Create your account with pattern50');\r\n    expect(subtitle).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the full name label', () => {\r\n    const fullNameLabel = screen.getByText('Full Name');\r\n    expect(fullNameLabel).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the email label', () => {\r\n    const emailLabel = screen.getByText('Email Address');\r\n    expect(emailLabel).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the password label', () => {\r\n    const passwordLabel = screen.getByText('Password');\r\n    expect(passwordLabel).toBeInTheDocument();\r\n  });\r\n\r\n\r\n  it('renders the full name placeholder', () => {\r\n    const fullNamePlaceholder = screen.getByPlaceholderText('Full Name');\r\n    expect(fullNamePlaceholder).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the email address placeholder', () => {\r\n    const emailPlaceholder = screen.getByPlaceholderText('Email Address');\r\n    expect(emailPlaceholder).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders the password placeholder', () => {\r\n    const passwordPlaceholder = screen.getByPlaceholderText('Password');\r\n    expect(passwordPlaceholder).toBeInTheDocument();\r\n  });\r\n\r\n\r\n\r\n});"],"names":["queryClient","QueryClient","describe","beforeEach","render","Provider","store","QueryClientProvider","client","Signup","it","logo","screen","getByAltText","expect","toBeInTheDocument","title","getByRole","name","subtitle","getByText","fullNameLabel","emailLabel","passwordLabel","fullNamePlaceholder","getByPlaceholderText","emailPlaceholder","passwordPlaceholder"],"mappings":";;;;;QAAO;uBACmC;4BACjB;4BACwB;uBAC3B;6DACH;;;;;;AAEnB,MAAMA,cAAc,IAAIC,uBAAW;AAEnCC,SAAS,eAAe;IACtBC,WAAW;QACTC,IAAAA,aAAM,gBACJ,qBAACC,oBAAQ;YAACC,OAAOA,YAAK;sBACpB,cAAA,qBAACC,+BAAmB;gBAACC,QAAQR;0BAC3B,cAAA,qBAACS,aAAM;;;IAIf;IAEAC,GAAG,oBAAoB;QACrB,MAAMC,OAAOC,aAAM,CAACC,YAAY,CAAC;QACjCC,OAAOH,MAAMI,iBAAiB;IAChC;IAEAL,GAAG,qBAAqB;QACtB,MAAMM,QAAQJ,aAAM,CAACK,SAAS,CAAC,WAAW;YAAEC,MAAM;QAAU;QAC5DJ,OAAOE,OAAOD,iBAAiB;IACjC;IAEAL,GAAG,wBAAwB;QACzB,MAAMS,WAAWP,aAAM,CAACQ,SAAS,CAAC;QAClCN,OAAOK,UAAUJ,iBAAiB;IACpC;IAEAL,GAAG,+BAA+B;QAChC,MAAMW,gBAAgBT,aAAM,CAACQ,SAAS,CAAC;QACvCN,OAAOO,eAAeN,iBAAiB;IACzC;IAEAL,GAAG,2BAA2B;QAC5B,MAAMY,aAAaV,aAAM,CAACQ,SAAS,CAAC;QACpCN,OAAOQ,YAAYP,iBAAiB;IACtC;IAEAL,GAAG,8BAA8B;QAC/B,MAAMa,gBAAgBX,aAAM,CAACQ,SAAS,CAAC;QACvCN,OAAOS,eAAeR,iBAAiB;IACzC;IAGAL,GAAG,qCAAqC;QACtC,MAAMc,sBAAsBZ,aAAM,CAACa,oBAAoB,CAAC;QACxDX,OAAOU,qBAAqBT,iBAAiB;IAC/C;IAEAL,GAAG,yCAAyC;QAC1C,MAAMgB,mBAAmBd,aAAM,CAACa,oBAAoB,CAAC;QACrDX,OAAOY,kBAAkBX,iBAAiB;IAC5C;IAEAL,GAAG,oCAAoC;QACrC,MAAMiB,sBAAsBf,aAAM,CAACa,oBAAoB,CAAC;QACxDX,OAAOa,qBAAqBZ,iBAAiB;IAC/C;AAIF"}