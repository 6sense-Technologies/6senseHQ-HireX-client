3499e6086236b60d3f3916679aa22ea8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
require("@testing-library/jest-dom");
const _react = require("@testing-library/react");
const _reactredux = require("react-redux");
const _reactquery = require("@tanstack/react-query");
const _store = require("../store/store");
const _page = /*#__PURE__*/ _interop_require_default(require("../app/(auth)/login/page"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const queryClient = new _reactquery.QueryClient();
describe('Login Page', ()=>{
    beforeEach(()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
            store: _store.store,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
                client: queryClient,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_page.default, {})
            })
        }));
    });
    it('renders the logo', ()=>{
        const logo = _react.screen.getByAltText('Pattern50 Logo');
        expect(logo).toBeInTheDocument();
    });
    it('renders the title', ()=>{
        const title = _react.screen.getByText('Login');
        expect(title).toBeInTheDocument();
    });
    it('renders the subtitle', ()=>{
        const subtitle = _react.screen.getByText('Continue with pattern50');
        expect(subtitle).toBeInTheDocument();
    });
    it('renders the email label', ()=>{
        const emailLabel = _react.screen.getByLabelText('Email Address');
        expect(emailLabel).toBeInTheDocument();
    });
    it('renders the password label', ()=>{
        const passwordLabel = _react.screen.getByLabelText('Password');
        expect(passwordLabel).toBeInTheDocument();
    });
    it('renders the email placeholder', ()=>{
        const emailPlaceholder = _react.screen.getByPlaceholderText('Email Address');
        expect(emailPlaceholder).toBeInTheDocument();
    });
    it('renders the password placeholder', ()=>{
        const passwordPlaceholder = _react.screen.getByPlaceholderText('Password');
        expect(passwordPlaceholder).toBeInTheDocument();
    });
    it('renders the eye icon in default', ()=>{
        const eyeIcon = _react.screen.getByRole('button', {
            name: /eye/i
        });
        expect(eyeIcon).toBeInTheDocument();
    });
    it('toggles the eye icon visibility', ()=>{
        const eyeButton = _react.screen.getByRole('button', {
            name: /eye/i
        });
        _react.fireEvent.click(eyeButton);
        expect(_react.screen.getByRole('button', {
            name: /eye slash/i
        })).toBeInTheDocument();
        _react.fireEvent.click(_react.screen.getByRole('button', {
            name: /eye slash/i
        }));
        expect(_react.screen.getByRole('button', {
            name: /eye/i
        })).toBeInTheDocument();
    });
    it('renders the login button', ()=>{
        const loginButton = _react.screen.getByRole('button', {
            name: /login/i
        });
        expect(loginButton).toBeInTheDocument();
    });
    it('renders the Google button', ()=>{
        const googleButton = _react.screen.getByText('Sign in with Google');
        expect(googleButton).toBeInTheDocument();
    });
    it('renders the forgot password link', ()=>{
        const forgotPasswordLink = _react.screen.getByText('Forgot password?');
        expect(forgotPasswordLink).toBeInTheDocument();
    });
    it('renders the text below the login button', ()=>{
        const orDivider = _react.screen.getByText('OR');
        expect(orDivider).toBeInTheDocument();
    });
    it('renders the Google button on the left of the Google sign-in button', ()=>{
        const googleButton = _react.screen.getByText('Sign in with Google');
        expect(googleButton).toBeInTheDocument();
    });
    it('checks what happens when user hovers on the sign-in button', ()=>{
        const loginButton = _react.screen.getByRole('button', {
            name: /login/i
        });
        _react.fireEvent.mouseOver(loginButton);
        expect(loginButton).toHaveClass('hover');
    });
});

//# sourceMappingURL=data:application/json;base64,