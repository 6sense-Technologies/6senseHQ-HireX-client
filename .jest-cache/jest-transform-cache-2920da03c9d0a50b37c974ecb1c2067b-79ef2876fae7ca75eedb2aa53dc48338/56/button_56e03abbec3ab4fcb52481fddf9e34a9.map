{"version":3,"sources":["C:\\Users\\khana\\OneDrive\\Computer Files\\Desktop\\6senseHQ-HireX-client\\components\\ui\\button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        primary: 'bg-blue-600 text-white hover:bg-blue-700',\n        google: 'border bg-white text-black hover:bg-gray-100',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        withoutBorder: 'bg-transparent',\n        blackwhite: 'bg-white text-black border',\n        lightBlue: 'bg-lightBlueBg text-white',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        medium: 'w-full px-4 py-2 text-base',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        dropdownsize: 'pr-1 py-2',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n"],"names":["Button","buttonVariants","cva","variants","variant","default","primary","google","destructive","outline","secondary","ghost","link","withoutBorder","blackwhite","lightBlue","size","medium","sm","lg","icon","dropdownsize","defaultVariants","React","forwardRef","className","asChild","props","ref","Comp","Slot","cn","displayName"],"mappings":";;;;;;;;;;;IA8DSA,MAAM;eAANA;;IAAQC,cAAc;eAAdA;;;;+DA9DM;2BACF;wCACkB;uBAEpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMA,iBAAiBC,IAAAA,2BAAG,EACxB,4VACA;IACEC,UAAU;QACRC,SAAS;YACPC,SAAS;YACTC,SAAS;YACTC,QAAQ;YACRC,aACE;YACFC,SACE;YACFC,WACE;YACFC,OAAO;YACPC,MAAM;YACNC,eAAe;YACfC,YAAY;YACZC,WAAW;QACb;QACAC,MAAM;YACJX,SAAS;YACTY,QAAQ;YACRC,IAAI;YACJC,IAAI;YACJC,MAAM;YACNC,cAAc;QAChB;IACF;IACAC,iBAAiB;QACflB,SAAS;QACTY,MAAM;IACR;AACF;AASF,MAAMhB,uBAASuB,OAAMC,UAAU,CAC7B,CAAC,EAAEC,SAAS,EAAErB,OAAO,EAAEY,IAAI,EAAEU,UAAU,KAAK,EAAE,GAAGC,OAAO,EAAEC;IACxD,MAAMC,OAAOH,UAAUI,eAAI,GAAG;IAC9B,qBACE,qBAACD;QACCJ,WAAWM,IAAAA,SAAE,EAAC9B,eAAe;YAAEG;YAASY;YAAMS;QAAU;QACxDG,KAAKA;QACJ,GAAGD,KAAK;;AAGf;AAEF3B,OAAOgC,WAAW,GAAG"}