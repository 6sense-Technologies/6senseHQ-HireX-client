5404f2ce59fd1677a279d896c2933845
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _button = require("../../../../components/ui/button");
const _react = require("@phosphor-icons/react");
const _lucidereact = require("lucide-react");
const _react1 = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _tag = /*#__PURE__*/ _interop_require_default(require("./tag"));
const _reacthookform = require("react-hook-form");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const Dropdownmenu = ({ control, name })=>{
    const [isOpen, setIsOpen] = (0, _react1.useState)(false);
    const [searchQuery, setSearchQuery] = (0, _react1.useState)('');
    const dropdownRef = (0, _react1.useRef)(null);
    const [newSkill, setNewSkill] = (0, _react1.useState)('');
    const [showNewSkillInput, setShowNewSkillInput] = (0, _react1.useState)(false);
    const skills = [
        'C++',
        'TypeScript',
        'MongoDB',
        'JavaScript',
        'React',
        'Node.js',
        'Python',
        'Django',
        'Java',
        'Spring Boot',
        'C#',
        'ASP.NET',
        'Ruby on Rails',
        'Angular',
        'Vue.js',
        'SQL',
        'NoSQL',
        'AWS',
        'Azure',
        'Docker',
        'Kubernetes',
        'Git',
        'CI/CD',
        'Agile Methodologies',
        'Scrum'
    ];
    const toggleDropdown = ()=>{
        setIsOpen(!isOpen);
    };
    const handleSearchChange = (event)=>{
        setSearchQuery(event.target.value);
    };
    const filteredSkills = skills.filter((skill)=>skill.toLowerCase().includes(searchQuery.toLowerCase()));
    const handleClickOutside = (event)=>{
        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
            setIsOpen(false);
        }
    };
    (0, _react1.useEffect)(()=>{
        document.addEventListener('mousedown', handleClickOutside);
        return ()=>{
            document.removeEventListener('mousedown', handleClickOutside);
        };
    }, []);
    const handleNewSkillChange = (event)=>{
        setNewSkill(event.target.value);
    };
    const handleAddNewSkill = (field)=>{
        if (newSkill && !field.value?.includes(newSkill)) {
            const updatedSkills = [
                ...field.value || [],
                newSkill
            ];
            field.onChange(updatedSkills);
            setNewSkill('');
            setShowNewSkillInput(false);
        }
    };
    const handleAddmore = ()=>{
        setShowNewSkillInput(true);
        setIsOpen(false);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
        name: name,
        control: control,
        render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "relative",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex max-w-[156px] items-center justify-center rounded-md border border-dashed bg-white px-[14px] py-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                type: "button",
                                variant: "withoutBorder",
                                size: "dropdownsize",
                                className: "text-twelve",
                                onClick: toggleDropdown,
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.PlusCircle, {
                                            className: "h-[160px]"
                                        })
                                    }),
                                    "Add"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "px-[8px] text-dropdownMenuBorderColor",
                                children: " |"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                className: "text-nowrap rounded-[4px] bg-dropdownSecondaryBg px-[4px] py-[2px] text-twelve",
                                children: [
                                    (field.value || []).length,
                                    " selected"
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "relative z-0 flex",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tag.default, {
                                selectedSkills: field.value || [],
                                onRemoveSkill: (skill)=>field.onChange((field.value || []).filter((s)=>s !== skill))
                            }),
                            showNewSkillInput && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "relative mt-2 flex items-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                        type: "text",
                                        value: newSkill,
                                        onChange: handleNewSkillChange,
                                        placeholder: "New skill",
                                        className: "rounded border px-2 py-1"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Check, {
                                        className: "absolute left-[205px] cursor-pointer",
                                        onClick: ()=>handleAddNewSkill(field)
                                    })
                                ]
                            })
                        ]
                    }),
                    isOpen && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        ref: dropdownRef,
                        className: "absolute top-9 z-10 mt-2 h-[200px] max-w-[156px] overflow-y-auto overflow-x-hidden rounded-md border bg-white p-2 shadow-lg",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "relative mb-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.MagnifyingGlass, {
                                        className: "absolute left-1 top-1 text-placeholderColor"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                        type: "text",
                                        name: "",
                                        id: "",
                                        placeholder: "Status",
                                        value: searchQuery,
                                        onChange: handleSearchChange,
                                        className: "w-full border-b pl-8 placeholder:text-placeholderColor"
                                    })
                                ]
                            }),
                            filteredSkills.map((skill)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-2 p-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            type: "checkbox",
                                            checked: (field.value || []).includes(skill),
                                            onChange: ()=>field.onChange((field.value || []).includes(skill) ? (field.value || []).filter((s)=>s !== skill) : [
                                                    ...field.value || [],
                                                    skill
                                                ]),
                                            className: "h-4 w-4 cursor-pointer"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            children: skill
                                        })
                                    ]
                                }, skill)),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "mt-2 cursor-pointer p-2",
                                onClick: handleAddmore,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    children: "Add More"
                                })
                            })
                        ]
                    })
                ]
            })
    });
};
const _default = Dropdownmenu;

//# sourceMappingURL=data:application/json;base64,